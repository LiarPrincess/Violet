#if !canImport(ObjectiveC)
import XCTest

extension ASCIIDataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ASCIIDataTests = [
        ("test_decimalDigit", test_decimalDigit),
        ("test_digit", test_digit),
        ("test_isAlpha", test_isAlpha),
        ("test_isAlphaNumeric", test_isAlphaNumeric),
        ("test_isCased", test_isCased),
        ("test_isLineBreak", test_isLineBreak),
        ("test_isWhitespace", test_isWhitespace),
        ("test_lowercase", test_lowercase),
        ("test_titlecase", test_titlecase),
        ("test_uppercase", test_uppercase),
    ]
}

extension UnicodeDataASCIITests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataASCIITests = [
        ("test_casefold", test_casefold),
        ("test_decimalDigit", test_decimalDigit),
        ("test_digit", test_digit),
        ("test_isAlpha", test_isAlpha),
        ("test_isAlphaNumeric", test_isAlphaNumeric),
        ("test_isCased", test_isCased),
        ("test_isCaseIgnorable", test_isCaseIgnorable),
        ("test_isLineBreak", test_isLineBreak),
        ("test_isNumeric", test_isNumeric),
        ("test_isPrintable", test_isPrintable),
        ("test_isWhitespace", test_isWhitespace),
        ("test_isXidContinue", test_isXidContinue),
        ("test_isXidStart", test_isXidStart),
        ("test_lowercase", test_lowercase),
        ("test_titlecase", test_titlecase),
        ("test_uppercase", test_uppercase),
    ]
}

extension UnicodeDataArabicTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataArabicTests = [
        ("test_afghaniSign", test_afghaniSign),
        ("test_arabic_indicCubeRoot", test_arabic_indicCubeRoot),
        ("test_arabic_indicDigitEight", test_arabic_indicDigitEight),
        ("test_arabic_indicDigitFive", test_arabic_indicDigitFive),
        ("test_arabic_indicDigitFour", test_arabic_indicDigitFour),
        ("test_arabic_indicDigitNine", test_arabic_indicDigitNine),
        ("test_arabic_indicDigitOne", test_arabic_indicDigitOne),
        ("test_arabic_indicDigitSeven", test_arabic_indicDigitSeven),
        ("test_arabic_indicDigitSix", test_arabic_indicDigitSix),
        ("test_arabic_indicDigitThree", test_arabic_indicDigitThree),
        ("test_arabic_indicDigitTwo", test_arabic_indicDigitTwo),
        ("test_arabic_indicDigitZero", test_arabic_indicDigitZero),
        ("test_arabic_indicFourthRoot", test_arabic_indicFourthRoot),
        ("test_arabic_indicPerMilleSign", test_arabic_indicPerMilleSign),
        ("test_arabic_indicPerTenThousandSign", test_arabic_indicPerTenThousandSign),
        ("test_arabicComma", test_arabicComma),
        ("test_arabicDamma", test_arabicDamma),
        ("test_arabicDammatan", test_arabicDammatan),
        ("test_arabicDateSeparator", test_arabicDateSeparator),
        ("test_arabicDecimalSeparator", test_arabicDecimalSeparator),
        ("test_arabicEmptyCentreHighStop", test_arabicEmptyCentreHighStop),
        ("test_arabicEmptyCentreLowStop", test_arabicEmptyCentreLowStop),
        ("test_arabicEndOfAyah", test_arabicEndOfAyah),
        ("test_arabicFatha", test_arabicFatha),
        ("test_arabicFathatan", test_arabicFathatan),
        ("test_arabicFathaWithTwoDots", test_arabicFathaWithTwoDots),
        ("test_arabicFivePointedStar", test_arabicFivePointedStar),
        ("test_arabicFootnoteMarker", test_arabicFootnoteMarker),
        ("test_arabicFullStop", test_arabicFullStop),
        ("test_arabicHamzaAbove", test_arabicHamzaAbove),
        ("test_arabicHamzaBelow", test_arabicHamzaBelow),
        ("test_arabicInvertedDamma", test_arabicInvertedDamma),
        ("test_arabicKasra", test_arabicKasra),
        ("test_arabicKasratan", test_arabicKasratan),
        ("test_arabicLetterAe", test_arabicLetterAe),
        ("test_arabicLetterAin", test_arabicLetterAin),
        ("test_arabicLetterAinWithThreeDotsAbove", test_arabicLetterAinWithThreeDotsAbove),
        ("test_arabicLetterAlef", test_arabicLetterAlef),
        ("test_arabicLetterAlefMaksura", test_arabicLetterAlefMaksura),
        ("test_arabicLetterAlefWasla", test_arabicLetterAlefWasla),
        ("test_arabicLetterAlefWithHamzaAbove", test_arabicLetterAlefWithHamzaAbove),
        ("test_arabicLetterAlefWithHamzaBelow", test_arabicLetterAlefWithHamzaBelow),
        ("test_arabicLetterAlefWithMaddaAbove", test_arabicLetterAlefWithMaddaAbove),
        ("test_arabicLetterAlefWithWavyHamzaAbove", test_arabicLetterAlefWithWavyHamzaAbove),
        ("test_arabicLetterAlefWithWavyHamzaBelow", test_arabicLetterAlefWithWavyHamzaBelow),
        ("test_arabicLetterBeeh", test_arabicLetterBeeh),
        ("test_arabicLetterBeh", test_arabicLetterBeh),
        ("test_arabicLetterBeheh", test_arabicLetterBeheh),
        ("test_arabicLetterDad", test_arabicLetterDad),
        ("test_arabicLetterDadWithDotBelow", test_arabicLetterDadWithDotBelow),
        ("test_arabicLetterDahal", test_arabicLetterDahal),
        ("test_arabicLetterDal", test_arabicLetterDal),
        ("test_arabicLetterDalWithDotBelow", test_arabicLetterDalWithDotBelow),
        ("test_arabicLetterDalWithDotBelowAndSmallTah", test_arabicLetterDalWithDotBelowAndSmallTah),
        ("test_arabicLetterDalWithFourDotsAbove", test_arabicLetterDalWithFourDotsAbove),
        ("test_arabicLetterDalWithInvertedV", test_arabicLetterDalWithInvertedV),
        ("test_arabicLetterDalWithRing", test_arabicLetterDalWithRing),
        ("test_arabicLetterDalWithThreeDotsAboveDownwards", test_arabicLetterDalWithThreeDotsAboveDownwards),
        ("test_arabicLetterDdahal", test_arabicLetterDdahal),
        ("test_arabicLetterDdal", test_arabicLetterDdal),
        ("test_arabicLetterDotlessBeh", test_arabicLetterDotlessBeh),
        ("test_arabicLetterDotlessFeh", test_arabicLetterDotlessFeh),
        ("test_arabicLetterDotlessQaf", test_arabicLetterDotlessQaf),
        ("test_arabicLetterDul", test_arabicLetterDul),
        ("test_arabicLetterDyeh", test_arabicLetterDyeh),
        ("test_arabicLetterE", test_arabicLetterE),
        ("test_arabicLetterFarsiYeh", test_arabicLetterFarsiYeh),
        ("test_arabicLetterFarsiYehWithInvertedV", test_arabicLetterFarsiYehWithInvertedV),
        ("test_arabicLetterFarsiYehWithThreeDotsAbove", test_arabicLetterFarsiYehWithThreeDotsAbove),
        ("test_arabicLetterFarsiYehWithTwoDotsAbove", test_arabicLetterFarsiYehWithTwoDotsAbove),
        ("test_arabicLetterFeh", test_arabicLetterFeh),
        ("test_arabicLetterFehWithDotBelow", test_arabicLetterFehWithDotBelow),
        ("test_arabicLetterFehWithDotMovedBelow", test_arabicLetterFehWithDotMovedBelow),
        ("test_arabicLetterFehWithThreeDotsBelow", test_arabicLetterFehWithThreeDotsBelow),
        ("test_arabicLetterGaf", test_arabicLetterGaf),
        ("test_arabicLetterGafWithRing", test_arabicLetterGafWithRing),
        ("test_arabicLetterGafWithThreeDotsAbove", test_arabicLetterGafWithThreeDotsAbove),
        ("test_arabicLetterGafWithTwoDotsBelow", test_arabicLetterGafWithTwoDotsBelow),
        ("test_arabicLetterGhain", test_arabicLetterGhain),
        ("test_arabicLetterGhainWithDotBelow", test_arabicLetterGhainWithDotBelow),
        ("test_arabicLetterGueh", test_arabicLetterGueh),
        ("test_arabicLetterHah", test_arabicLetterHah),
        ("test_arabicLetterHahWithHamzaAbove", test_arabicLetterHahWithHamzaAbove),
        ("test_arabicLetterHahWithThreeDotsAbove", test_arabicLetterHahWithThreeDotsAbove),
        ("test_arabicLetterHahWithTwoDotsVerticalAbove", test_arabicLetterHahWithTwoDotsVerticalAbove),
        ("test_arabicLetterHamza", test_arabicLetterHamza),
        ("test_arabicLetterHeh", test_arabicLetterHeh),
        ("test_arabicLetterHehDoachashmee", test_arabicLetterHehDoachashmee),
        ("test_arabicLetterHehGoal", test_arabicLetterHehGoal),
        ("test_arabicLetterHehGoalWithHamzaAbove", test_arabicLetterHehGoalWithHamzaAbove),
        ("test_arabicLetterHehWithInvertedV", test_arabicLetterHehWithInvertedV),
        ("test_arabicLetterHehWithYehAbove", test_arabicLetterHehWithYehAbove),
        ("test_arabicLetterHighHamza", test_arabicLetterHighHamza),
        ("test_arabicLetterHighHamzaAlef", test_arabicLetterHighHamzaAlef),
        ("test_arabicLetterHighHamzaWaw", test_arabicLetterHighHamzaWaw),
        ("test_arabicLetterHighHamzaYeh", test_arabicLetterHighHamzaYeh),
        ("test_arabicLetterJeem", test_arabicLetterJeem),
        ("test_arabicLetterJeh", test_arabicLetterJeh),
        ("test_arabicLetterKaf", test_arabicLetterKaf),
        ("test_arabicLetterKafWithDotAbove", test_arabicLetterKafWithDotAbove),
        ("test_arabicLetterKafWithRing", test_arabicLetterKafWithRing),
        ("test_arabicLetterKafWithThreeDotsBelow", test_arabicLetterKafWithThreeDotsBelow),
        ("test_arabicLetterKashmiriYeh", test_arabicLetterKashmiriYeh),
        ("test_arabicLetterKeheh", test_arabicLetterKeheh),
        ("test_arabicLetterKehehWithThreeDotsBelow", test_arabicLetterKehehWithThreeDotsBelow),
        ("test_arabicLetterKehehWithTwoDotsAbove", test_arabicLetterKehehWithTwoDotsAbove),
        ("test_arabicLetterKhah", test_arabicLetterKhah),
        ("test_arabicLetterKirghizOe", test_arabicLetterKirghizOe),
        ("test_arabicLetterKirghizYu", test_arabicLetterKirghizYu),
        ("test_arabicLetterLam", test_arabicLetterLam),
        ("test_arabicLetterLamWithDotAbove", test_arabicLetterLamWithDotAbove),
        ("test_arabicLetterLamWithSmallV", test_arabicLetterLamWithSmallV),
        ("test_arabicLetterLamWithThreeDotsAbove", test_arabicLetterLamWithThreeDotsAbove),
        ("test_arabicLetterLamWithThreeDotsBelow", test_arabicLetterLamWithThreeDotsBelow),
        ("test_arabicLetterMark", test_arabicLetterMark),
        ("test_arabicLetterMeem", test_arabicLetterMeem),
        ("test_arabicLetterNg", test_arabicLetterNg),
        ("test_arabicLetterNgoeh", test_arabicLetterNgoeh),
        ("test_arabicLetterNoon", test_arabicLetterNoon),
        ("test_arabicLetterNoonGhunna", test_arabicLetterNoonGhunna),
        ("test_arabicLetterNoonWithDotBelow", test_arabicLetterNoonWithDotBelow),
        ("test_arabicLetterNoonWithRing", test_arabicLetterNoonWithRing),
        ("test_arabicLetterNoonWithThreeDotsAbove", test_arabicLetterNoonWithThreeDotsAbove),
        ("test_arabicLetterNyeh", test_arabicLetterNyeh),
        ("test_arabicLetterOe", test_arabicLetterOe),
        ("test_arabicLetterPeh", test_arabicLetterPeh),
        ("test_arabicLetterPeheh", test_arabicLetterPeheh),
        ("test_arabicLetterQaf", test_arabicLetterQaf),
        ("test_arabicLetterQafWithDotAbove", test_arabicLetterQafWithDotAbove),
        ("test_arabicLetterQafWithThreeDotsAbove", test_arabicLetterQafWithThreeDotsAbove),
        ("test_arabicLetterReh", test_arabicLetterReh),
        ("test_arabicLetterRehWithDotBelow", test_arabicLetterRehWithDotBelow),
        ("test_arabicLetterRehWithDotBelowAndDotAbove", test_arabicLetterRehWithDotBelowAndDotAbove),
        ("test_arabicLetterRehWithFourDotsAbove", test_arabicLetterRehWithFourDotsAbove),
        ("test_arabicLetterRehWithInvertedV", test_arabicLetterRehWithInvertedV),
        ("test_arabicLetterRehWithRing", test_arabicLetterRehWithRing),
        ("test_arabicLetterRehWithSmallV", test_arabicLetterRehWithSmallV),
        ("test_arabicLetterRehWithSmallVBelow", test_arabicLetterRehWithSmallVBelow),
        ("test_arabicLetterRehWithTwoDotsAbove", test_arabicLetterRehWithTwoDotsAbove),
        ("test_arabicLetterRnoon", test_arabicLetterRnoon),
        ("test_arabicLetterRreh", test_arabicLetterRreh),
        ("test_arabicLetterSad", test_arabicLetterSad),
        ("test_arabicLetterSadWithThreeDotsAbove", test_arabicLetterSadWithThreeDotsAbove),
        ("test_arabicLetterSadWithTwoDotsBelow", test_arabicLetterSadWithTwoDotsBelow),
        ("test_arabicLetterSeen", test_arabicLetterSeen),
        ("test_arabicLetterSeenWithDotBelowAndDotAbove", test_arabicLetterSeenWithDotBelowAndDotAbove),
        ("test_arabicLetterSeenWithThreeDotsBelow", test_arabicLetterSeenWithThreeDotsBelow),
        ("test_arabicLetterSeenWithThreeDotsBelowAndThreeDotsAbove", test_arabicLetterSeenWithThreeDotsBelowAndThreeDotsAbove),
        ("test_arabicLetterSheen", test_arabicLetterSheen),
        ("test_arabicLetterSheenWithDotBelow", test_arabicLetterSheenWithDotBelow),
        ("test_arabicLetterSuperscriptAlef", test_arabicLetterSuperscriptAlef),
        ("test_arabicLetterSwashKaf", test_arabicLetterSwashKaf),
        ("test_arabicLetterTah", test_arabicLetterTah),
        ("test_arabicLetterTahWithThreeDotsAbove", test_arabicLetterTahWithThreeDotsAbove),
        ("test_arabicLetterTcheh", test_arabicLetterTcheh),
        ("test_arabicLetterTcheheh", test_arabicLetterTcheheh),
        ("test_arabicLetterTchehWithDotAbove", test_arabicLetterTchehWithDotAbove),
        ("test_arabicLetterTeh", test_arabicLetterTeh),
        ("test_arabicLetterTeheh", test_arabicLetterTeheh),
        ("test_arabicLetterTehMarbuta", test_arabicLetterTehMarbuta),
        ("test_arabicLetterTehMarbutaGoal", test_arabicLetterTehMarbutaGoal),
        ("test_arabicLetterTehWithRing", test_arabicLetterTehWithRing),
        ("test_arabicLetterTehWithThreeDotsAboveDownwards", test_arabicLetterTehWithThreeDotsAboveDownwards),
        ("test_arabicLetterThal", test_arabicLetterThal),
        ("test_arabicLetterTheh", test_arabicLetterTheh),
        ("test_arabicLetterTteh", test_arabicLetterTteh),
        ("test_arabicLetterTteheh", test_arabicLetterTteheh),
        ("test_arabicLetterU", test_arabicLetterU),
        ("test_arabicLetterUWithHamzaAbove", test_arabicLetterUWithHamzaAbove),
        ("test_arabicLetterVe", test_arabicLetterVe),
        ("test_arabicLetterVeh", test_arabicLetterVeh),
        ("test_arabicLetterWaw", test_arabicLetterWaw),
        ("test_arabicLetterWawWithDotAbove", test_arabicLetterWawWithDotAbove),
        ("test_arabicLetterWawWithHamzaAbove", test_arabicLetterWawWithHamzaAbove),
        ("test_arabicLetterWawWithRing", test_arabicLetterWawWithRing),
        ("test_arabicLetterWawWithTwoDotsAbove", test_arabicLetterWawWithTwoDotsAbove),
        ("test_arabicLetterYeh", test_arabicLetterYeh),
        ("test_arabicLetterYehBarree", test_arabicLetterYehBarree),
        ("test_arabicLetterYehBarreeWithHamzaAbove", test_arabicLetterYehBarreeWithHamzaAbove),
        ("test_arabicLetterYehWithHamzaAbove", test_arabicLetterYehWithHamzaAbove),
        ("test_arabicLetterYehWithSmallV", test_arabicLetterYehWithSmallV),
        ("test_arabicLetterYehWithTail", test_arabicLetterYehWithTail),
        ("test_arabicLetterYehWithThreeDotsBelow", test_arabicLetterYehWithThreeDotsBelow),
        ("test_arabicLetterYu", test_arabicLetterYu),
        ("test_arabicLetterZah", test_arabicLetterZah),
        ("test_arabicLetterZain", test_arabicLetterZain),
        ("test_arabicMaddahAbove", test_arabicMaddahAbove),
        ("test_arabicMarkNoonGhunna", test_arabicMarkNoonGhunna),
        ("test_arabicNumberMarkAbove", test_arabicNumberMarkAbove),
        ("test_arabicNumberSign", test_arabicNumberSign),
        ("test_arabicPercentSign", test_arabicPercentSign),
        ("test_arabicPlaceOfSajdah", test_arabicPlaceOfSajdah),
        ("test_arabicPoeticVerseSign", test_arabicPoeticVerseSign),
        ("test_arabicQuestionMark", test_arabicQuestionMark),
        ("test_arabicRay", test_arabicRay),
        ("test_arabicReversedDamma", test_arabicReversedDamma),
        ("test_arabicRoundedHighStopWithFilledCentre", test_arabicRoundedHighStopWithFilledCentre),
        ("test_arabicSemicolon", test_arabicSemicolon),
        ("test_arabicShadda", test_arabicShadda),
        ("test_arabicSignAlayheAssallam", test_arabicSignAlayheAssallam),
        ("test_arabicSignMisra", test_arabicSignMisra),
        ("test_arabicSignRadiAllahouAnhu", test_arabicSignRadiAllahouAnhu),
        ("test_arabicSignRahmatullahAlayhe", test_arabicSignRahmatullahAlayhe),
        ("test_arabicSignSafha", test_arabicSignSafha),
        ("test_arabicSignSallallahouAlayheWassallam", test_arabicSignSallallahouAlayheWassallam),
        ("test_arabicSignSamvat", test_arabicSignSamvat),
        ("test_arabicSignSanah", test_arabicSignSanah),
        ("test_arabicSignSindhiAmpersand", test_arabicSignSindhiAmpersand),
        ("test_arabicSignSindhiPostpositionMen", test_arabicSignSindhiPostpositionMen),
        ("test_arabicSignTakhallus", test_arabicSignTakhallus),
        ("test_arabicSmallDamma", test_arabicSmallDamma),
        ("test_arabicSmallFatha", test_arabicSmallFatha),
        ("test_arabicSmallHighDotlessHeadOfKhah", test_arabicSmallHighDotlessHeadOfKhah),
        ("test_arabicSmallHighJeem", test_arabicSmallHighJeem),
        ("test_arabicSmallHighLamAlef", test_arabicSmallHighLamAlef),
        ("test_arabicSmallHighLigatureAlefWithLamWithYeh", test_arabicSmallHighLigatureAlefWithLamWithYeh),
        ("test_arabicSmallHighLigatureQafWithLamWithAlefMaksura", test_arabicSmallHighLigatureQafWithLamWithAlefMaksura),
        ("test_arabicSmallHighLigatureSadWithLamWithAlefMaksura", test_arabicSmallHighLigatureSadWithLamWithAlefMaksura),
        ("test_arabicSmallHighMadda", test_arabicSmallHighMadda),
        ("test_arabicSmallHighMeemInitialForm", test_arabicSmallHighMeemInitialForm),
        ("test_arabicSmallHighMeemIsolatedForm", test_arabicSmallHighMeemIsolatedForm),
        ("test_arabicSmallHighNoon", test_arabicSmallHighNoon),
        ("test_arabicSmallHighRoundedZero", test_arabicSmallHighRoundedZero),
        ("test_arabicSmallHighSeen", test_arabicSmallHighSeen),
        ("test_arabicSmallHighTah", test_arabicSmallHighTah),
        ("test_arabicSmallHighThreeDots", test_arabicSmallHighThreeDots),
        ("test_arabicSmallHighUprightRectangularZero", test_arabicSmallHighUprightRectangularZero),
        ("test_arabicSmallHighYeh", test_arabicSmallHighYeh),
        ("test_arabicSmallHighZain", test_arabicSmallHighZain),
        ("test_arabicSmallKasra", test_arabicSmallKasra),
        ("test_arabicSmallLowMeem", test_arabicSmallLowMeem),
        ("test_arabicSmallLowSeen", test_arabicSmallLowSeen),
        ("test_arabicSmallWaw", test_arabicSmallWaw),
        ("test_arabicSmallYeh", test_arabicSmallYeh),
        ("test_arabicStartOfRubElHizb", test_arabicStartOfRubElHizb),
        ("test_arabicSubscriptAlef", test_arabicSubscriptAlef),
        ("test_arabicSukun", test_arabicSukun),
        ("test_arabicTatweel", test_arabicTatweel),
        ("test_arabicThousandsSeparator", test_arabicThousandsSeparator),
        ("test_arabicTripleDotPunctuationMark", test_arabicTripleDotPunctuationMark),
        ("test_arabicVowelSignDotBelow", test_arabicVowelSignDotBelow),
        ("test_arabicVowelSignInvertedSmallVAbove", test_arabicVowelSignInvertedSmallVAbove),
        ("test_arabicVowelSignSmallVAbove", test_arabicVowelSignSmallVAbove),
        ("test_arabicWavyHamzaBelow", test_arabicWavyHamzaBelow),
        ("test_arabicZwarakay", test_arabicZwarakay),
        ("test_extendedArabic_indicDigitEight", test_extendedArabic_indicDigitEight),
        ("test_extendedArabic_indicDigitFive", test_extendedArabic_indicDigitFive),
        ("test_extendedArabic_indicDigitFour", test_extendedArabic_indicDigitFour),
        ("test_extendedArabic_indicDigitNine", test_extendedArabic_indicDigitNine),
        ("test_extendedArabic_indicDigitOne", test_extendedArabic_indicDigitOne),
        ("test_extendedArabic_indicDigitSeven", test_extendedArabic_indicDigitSeven),
        ("test_extendedArabic_indicDigitSix", test_extendedArabic_indicDigitSix),
        ("test_extendedArabic_indicDigitThree", test_extendedArabic_indicDigitThree),
        ("test_extendedArabic_indicDigitTwo", test_extendedArabic_indicDigitTwo),
        ("test_extendedArabic_indicDigitZero", test_extendedArabic_indicDigitZero),
    ]
}

extension UnicodeDataBasicLatinTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataBasicLatinTests = [
        ("test_ampersand", test_ampersand),
        ("test_apostrophe", test_apostrophe),
        ("test_asterisk", test_asterisk),
        ("test_circumflexAccent", test_circumflexAccent),
        ("test_colon", test_colon),
        ("test_comma", test_comma),
        ("test_commercialAt", test_commercialAt),
        ("test_digitEight", test_digitEight),
        ("test_digitFive", test_digitFive),
        ("test_digitFour", test_digitFour),
        ("test_digitNine", test_digitNine),
        ("test_digitOne", test_digitOne),
        ("test_digitSeven", test_digitSeven),
        ("test_digitSix", test_digitSix),
        ("test_digitThree", test_digitThree),
        ("test_digitTwo", test_digitTwo),
        ("test_digitZero", test_digitZero),
        ("test_dollarSign", test_dollarSign),
        ("test_equalsSign", test_equalsSign),
        ("test_exclamationMark", test_exclamationMark),
        ("test_fullStop", test_fullStop),
        ("test_graveAccent", test_graveAccent),
        ("test_greater_thanSign", test_greater_thanSign),
        ("test_hyphen_minus", test_hyphen_minus),
        ("test_latinCapitalLetterA", test_latinCapitalLetterA),
        ("test_latinCapitalLetterB", test_latinCapitalLetterB),
        ("test_latinCapitalLetterC", test_latinCapitalLetterC),
        ("test_latinCapitalLetterD", test_latinCapitalLetterD),
        ("test_latinCapitalLetterE", test_latinCapitalLetterE),
        ("test_latinCapitalLetterF", test_latinCapitalLetterF),
        ("test_latinCapitalLetterG", test_latinCapitalLetterG),
        ("test_latinCapitalLetterH", test_latinCapitalLetterH),
        ("test_latinCapitalLetterI", test_latinCapitalLetterI),
        ("test_latinCapitalLetterJ", test_latinCapitalLetterJ),
        ("test_latinCapitalLetterK", test_latinCapitalLetterK),
        ("test_latinCapitalLetterL", test_latinCapitalLetterL),
        ("test_latinCapitalLetterM", test_latinCapitalLetterM),
        ("test_latinCapitalLetterN", test_latinCapitalLetterN),
        ("test_latinCapitalLetterO", test_latinCapitalLetterO),
        ("test_latinCapitalLetterP", test_latinCapitalLetterP),
        ("test_latinCapitalLetterQ", test_latinCapitalLetterQ),
        ("test_latinCapitalLetterR", test_latinCapitalLetterR),
        ("test_latinCapitalLetterS", test_latinCapitalLetterS),
        ("test_latinCapitalLetterT", test_latinCapitalLetterT),
        ("test_latinCapitalLetterU", test_latinCapitalLetterU),
        ("test_latinCapitalLetterV", test_latinCapitalLetterV),
        ("test_latinCapitalLetterW", test_latinCapitalLetterW),
        ("test_latinCapitalLetterX", test_latinCapitalLetterX),
        ("test_latinCapitalLetterY", test_latinCapitalLetterY),
        ("test_latinCapitalLetterZ", test_latinCapitalLetterZ),
        ("test_latinSmallLetterA", test_latinSmallLetterA),
        ("test_latinSmallLetterB", test_latinSmallLetterB),
        ("test_latinSmallLetterC", test_latinSmallLetterC),
        ("test_latinSmallLetterD", test_latinSmallLetterD),
        ("test_latinSmallLetterE", test_latinSmallLetterE),
        ("test_latinSmallLetterF", test_latinSmallLetterF),
        ("test_latinSmallLetterG", test_latinSmallLetterG),
        ("test_latinSmallLetterH", test_latinSmallLetterH),
        ("test_latinSmallLetterI", test_latinSmallLetterI),
        ("test_latinSmallLetterJ", test_latinSmallLetterJ),
        ("test_latinSmallLetterK", test_latinSmallLetterK),
        ("test_latinSmallLetterL", test_latinSmallLetterL),
        ("test_latinSmallLetterM", test_latinSmallLetterM),
        ("test_latinSmallLetterN", test_latinSmallLetterN),
        ("test_latinSmallLetterO", test_latinSmallLetterO),
        ("test_latinSmallLetterP", test_latinSmallLetterP),
        ("test_latinSmallLetterQ", test_latinSmallLetterQ),
        ("test_latinSmallLetterR", test_latinSmallLetterR),
        ("test_latinSmallLetterS", test_latinSmallLetterS),
        ("test_latinSmallLetterT", test_latinSmallLetterT),
        ("test_latinSmallLetterU", test_latinSmallLetterU),
        ("test_latinSmallLetterV", test_latinSmallLetterV),
        ("test_latinSmallLetterW", test_latinSmallLetterW),
        ("test_latinSmallLetterX", test_latinSmallLetterX),
        ("test_latinSmallLetterY", test_latinSmallLetterY),
        ("test_latinSmallLetterZ", test_latinSmallLetterZ),
        ("test_leftCurlyBracket", test_leftCurlyBracket),
        ("test_leftParenthesis", test_leftParenthesis),
        ("test_leftSquareBracket", test_leftSquareBracket),
        ("test_less_thanSign", test_less_thanSign),
        ("test_lowLine", test_lowLine),
        ("test_numberSign", test_numberSign),
        ("test_percentSign", test_percentSign),
        ("test_plusSign", test_plusSign),
        ("test_questionMark", test_questionMark),
        ("test_quotationMark", test_quotationMark),
        ("test_reverseSolidus", test_reverseSolidus),
        ("test_rightCurlyBracket", test_rightCurlyBracket),
        ("test_rightParenthesis", test_rightParenthesis),
        ("test_rightSquareBracket", test_rightSquareBracket),
        ("test_semicolon", test_semicolon),
        ("test_solidus", test_solidus),
        ("test_space", test_space),
        ("test_tilde", test_tilde),
        ("test_verticalLine", test_verticalLine),
    ]
}

extension UnicodeDataBraillePatternsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataBraillePatternsTests = [
        ("test_braillePatternBlank", test_braillePatternBlank),
        ("test_braillePatternDots_1", test_braillePatternDots_1),
        ("test_braillePatternDots_12", test_braillePatternDots_12),
        ("test_braillePatternDots_123", test_braillePatternDots_123),
        ("test_braillePatternDots_1234", test_braillePatternDots_1234),
        ("test_braillePatternDots_12345", test_braillePatternDots_12345),
        ("test_braillePatternDots_123456", test_braillePatternDots_123456),
        ("test_braillePatternDots_1234567", test_braillePatternDots_1234567),
        ("test_braillePatternDots_12345678", test_braillePatternDots_12345678),
        ("test_braillePatternDots_1234568", test_braillePatternDots_1234568),
        ("test_braillePatternDots_123457", test_braillePatternDots_123457),
        ("test_braillePatternDots_1234578", test_braillePatternDots_1234578),
        ("test_braillePatternDots_123458", test_braillePatternDots_123458),
        ("test_braillePatternDots_12346", test_braillePatternDots_12346),
        ("test_braillePatternDots_123467", test_braillePatternDots_123467),
        ("test_braillePatternDots_1234678", test_braillePatternDots_1234678),
        ("test_braillePatternDots_123468", test_braillePatternDots_123468),
        ("test_braillePatternDots_12347", test_braillePatternDots_12347),
        ("test_braillePatternDots_123478", test_braillePatternDots_123478),
        ("test_braillePatternDots_12348", test_braillePatternDots_12348),
        ("test_braillePatternDots_1235", test_braillePatternDots_1235),
        ("test_braillePatternDots_12356", test_braillePatternDots_12356),
        ("test_braillePatternDots_123567", test_braillePatternDots_123567),
        ("test_braillePatternDots_1235678", test_braillePatternDots_1235678),
        ("test_braillePatternDots_123568", test_braillePatternDots_123568),
        ("test_braillePatternDots_12357", test_braillePatternDots_12357),
        ("test_braillePatternDots_123578", test_braillePatternDots_123578),
        ("test_braillePatternDots_12358", test_braillePatternDots_12358),
        ("test_braillePatternDots_1236", test_braillePatternDots_1236),
        ("test_braillePatternDots_12367", test_braillePatternDots_12367),
        ("test_braillePatternDots_123678", test_braillePatternDots_123678),
        ("test_braillePatternDots_12368", test_braillePatternDots_12368),
        ("test_braillePatternDots_1237", test_braillePatternDots_1237),
        ("test_braillePatternDots_12378", test_braillePatternDots_12378),
        ("test_braillePatternDots_1238", test_braillePatternDots_1238),
        ("test_braillePatternDots_124", test_braillePatternDots_124),
        ("test_braillePatternDots_1245", test_braillePatternDots_1245),
        ("test_braillePatternDots_12456", test_braillePatternDots_12456),
        ("test_braillePatternDots_124567", test_braillePatternDots_124567),
        ("test_braillePatternDots_1245678", test_braillePatternDots_1245678),
        ("test_braillePatternDots_124568", test_braillePatternDots_124568),
        ("test_braillePatternDots_12457", test_braillePatternDots_12457),
        ("test_braillePatternDots_124578", test_braillePatternDots_124578),
        ("test_braillePatternDots_12458", test_braillePatternDots_12458),
        ("test_braillePatternDots_1246", test_braillePatternDots_1246),
        ("test_braillePatternDots_12467", test_braillePatternDots_12467),
        ("test_braillePatternDots_124678", test_braillePatternDots_124678),
        ("test_braillePatternDots_12468", test_braillePatternDots_12468),
        ("test_braillePatternDots_1247", test_braillePatternDots_1247),
        ("test_braillePatternDots_12478", test_braillePatternDots_12478),
        ("test_braillePatternDots_1248", test_braillePatternDots_1248),
        ("test_braillePatternDots_125", test_braillePatternDots_125),
        ("test_braillePatternDots_1256", test_braillePatternDots_1256),
        ("test_braillePatternDots_12567", test_braillePatternDots_12567),
        ("test_braillePatternDots_125678", test_braillePatternDots_125678),
        ("test_braillePatternDots_12568", test_braillePatternDots_12568),
        ("test_braillePatternDots_1257", test_braillePatternDots_1257),
        ("test_braillePatternDots_12578", test_braillePatternDots_12578),
        ("test_braillePatternDots_1258", test_braillePatternDots_1258),
        ("test_braillePatternDots_126", test_braillePatternDots_126),
        ("test_braillePatternDots_1267", test_braillePatternDots_1267),
        ("test_braillePatternDots_12678", test_braillePatternDots_12678),
        ("test_braillePatternDots_1268", test_braillePatternDots_1268),
        ("test_braillePatternDots_127", test_braillePatternDots_127),
        ("test_braillePatternDots_1278", test_braillePatternDots_1278),
        ("test_braillePatternDots_128", test_braillePatternDots_128),
        ("test_braillePatternDots_13", test_braillePatternDots_13),
        ("test_braillePatternDots_134", test_braillePatternDots_134),
        ("test_braillePatternDots_1345", test_braillePatternDots_1345),
        ("test_braillePatternDots_13456", test_braillePatternDots_13456),
        ("test_braillePatternDots_134567", test_braillePatternDots_134567),
        ("test_braillePatternDots_1345678", test_braillePatternDots_1345678),
        ("test_braillePatternDots_134568", test_braillePatternDots_134568),
        ("test_braillePatternDots_13457", test_braillePatternDots_13457),
        ("test_braillePatternDots_134578", test_braillePatternDots_134578),
        ("test_braillePatternDots_13458", test_braillePatternDots_13458),
        ("test_braillePatternDots_1346", test_braillePatternDots_1346),
        ("test_braillePatternDots_13467", test_braillePatternDots_13467),
        ("test_braillePatternDots_134678", test_braillePatternDots_134678),
        ("test_braillePatternDots_13468", test_braillePatternDots_13468),
        ("test_braillePatternDots_1347", test_braillePatternDots_1347),
        ("test_braillePatternDots_13478", test_braillePatternDots_13478),
        ("test_braillePatternDots_1348", test_braillePatternDots_1348),
        ("test_braillePatternDots_135", test_braillePatternDots_135),
        ("test_braillePatternDots_1356", test_braillePatternDots_1356),
        ("test_braillePatternDots_13567", test_braillePatternDots_13567),
        ("test_braillePatternDots_135678", test_braillePatternDots_135678),
        ("test_braillePatternDots_13568", test_braillePatternDots_13568),
        ("test_braillePatternDots_1357", test_braillePatternDots_1357),
        ("test_braillePatternDots_13578", test_braillePatternDots_13578),
        ("test_braillePatternDots_1358", test_braillePatternDots_1358),
        ("test_braillePatternDots_136", test_braillePatternDots_136),
        ("test_braillePatternDots_1367", test_braillePatternDots_1367),
        ("test_braillePatternDots_13678", test_braillePatternDots_13678),
        ("test_braillePatternDots_1368", test_braillePatternDots_1368),
        ("test_braillePatternDots_137", test_braillePatternDots_137),
        ("test_braillePatternDots_1378", test_braillePatternDots_1378),
        ("test_braillePatternDots_138", test_braillePatternDots_138),
        ("test_braillePatternDots_14", test_braillePatternDots_14),
        ("test_braillePatternDots_145", test_braillePatternDots_145),
        ("test_braillePatternDots_1456", test_braillePatternDots_1456),
        ("test_braillePatternDots_14567", test_braillePatternDots_14567),
        ("test_braillePatternDots_145678", test_braillePatternDots_145678),
        ("test_braillePatternDots_14568", test_braillePatternDots_14568),
        ("test_braillePatternDots_1457", test_braillePatternDots_1457),
        ("test_braillePatternDots_14578", test_braillePatternDots_14578),
        ("test_braillePatternDots_1458", test_braillePatternDots_1458),
        ("test_braillePatternDots_146", test_braillePatternDots_146),
        ("test_braillePatternDots_1467", test_braillePatternDots_1467),
        ("test_braillePatternDots_14678", test_braillePatternDots_14678),
        ("test_braillePatternDots_1468", test_braillePatternDots_1468),
        ("test_braillePatternDots_147", test_braillePatternDots_147),
        ("test_braillePatternDots_1478", test_braillePatternDots_1478),
        ("test_braillePatternDots_148", test_braillePatternDots_148),
        ("test_braillePatternDots_15", test_braillePatternDots_15),
        ("test_braillePatternDots_156", test_braillePatternDots_156),
        ("test_braillePatternDots_1567", test_braillePatternDots_1567),
        ("test_braillePatternDots_15678", test_braillePatternDots_15678),
        ("test_braillePatternDots_1568", test_braillePatternDots_1568),
        ("test_braillePatternDots_157", test_braillePatternDots_157),
        ("test_braillePatternDots_1578", test_braillePatternDots_1578),
        ("test_braillePatternDots_158", test_braillePatternDots_158),
        ("test_braillePatternDots_16", test_braillePatternDots_16),
        ("test_braillePatternDots_167", test_braillePatternDots_167),
        ("test_braillePatternDots_1678", test_braillePatternDots_1678),
        ("test_braillePatternDots_168", test_braillePatternDots_168),
        ("test_braillePatternDots_17", test_braillePatternDots_17),
        ("test_braillePatternDots_178", test_braillePatternDots_178),
        ("test_braillePatternDots_18", test_braillePatternDots_18),
        ("test_braillePatternDots_2", test_braillePatternDots_2),
        ("test_braillePatternDots_23", test_braillePatternDots_23),
        ("test_braillePatternDots_234", test_braillePatternDots_234),
        ("test_braillePatternDots_2345", test_braillePatternDots_2345),
        ("test_braillePatternDots_23456", test_braillePatternDots_23456),
        ("test_braillePatternDots_234567", test_braillePatternDots_234567),
        ("test_braillePatternDots_2345678", test_braillePatternDots_2345678),
        ("test_braillePatternDots_234568", test_braillePatternDots_234568),
        ("test_braillePatternDots_23457", test_braillePatternDots_23457),
        ("test_braillePatternDots_234578", test_braillePatternDots_234578),
        ("test_braillePatternDots_23458", test_braillePatternDots_23458),
        ("test_braillePatternDots_2346", test_braillePatternDots_2346),
        ("test_braillePatternDots_23467", test_braillePatternDots_23467),
        ("test_braillePatternDots_234678", test_braillePatternDots_234678),
        ("test_braillePatternDots_23468", test_braillePatternDots_23468),
        ("test_braillePatternDots_2347", test_braillePatternDots_2347),
        ("test_braillePatternDots_23478", test_braillePatternDots_23478),
        ("test_braillePatternDots_2348", test_braillePatternDots_2348),
        ("test_braillePatternDots_235", test_braillePatternDots_235),
        ("test_braillePatternDots_2356", test_braillePatternDots_2356),
        ("test_braillePatternDots_23567", test_braillePatternDots_23567),
        ("test_braillePatternDots_235678", test_braillePatternDots_235678),
        ("test_braillePatternDots_23568", test_braillePatternDots_23568),
        ("test_braillePatternDots_2357", test_braillePatternDots_2357),
        ("test_braillePatternDots_23578", test_braillePatternDots_23578),
        ("test_braillePatternDots_2358", test_braillePatternDots_2358),
        ("test_braillePatternDots_236", test_braillePatternDots_236),
        ("test_braillePatternDots_2367", test_braillePatternDots_2367),
        ("test_braillePatternDots_23678", test_braillePatternDots_23678),
        ("test_braillePatternDots_2368", test_braillePatternDots_2368),
        ("test_braillePatternDots_237", test_braillePatternDots_237),
        ("test_braillePatternDots_2378", test_braillePatternDots_2378),
        ("test_braillePatternDots_238", test_braillePatternDots_238),
        ("test_braillePatternDots_24", test_braillePatternDots_24),
        ("test_braillePatternDots_245", test_braillePatternDots_245),
        ("test_braillePatternDots_2456", test_braillePatternDots_2456),
        ("test_braillePatternDots_24567", test_braillePatternDots_24567),
        ("test_braillePatternDots_245678", test_braillePatternDots_245678),
        ("test_braillePatternDots_24568", test_braillePatternDots_24568),
        ("test_braillePatternDots_2457", test_braillePatternDots_2457),
        ("test_braillePatternDots_24578", test_braillePatternDots_24578),
        ("test_braillePatternDots_2458", test_braillePatternDots_2458),
        ("test_braillePatternDots_246", test_braillePatternDots_246),
        ("test_braillePatternDots_2467", test_braillePatternDots_2467),
        ("test_braillePatternDots_24678", test_braillePatternDots_24678),
        ("test_braillePatternDots_2468", test_braillePatternDots_2468),
        ("test_braillePatternDots_247", test_braillePatternDots_247),
        ("test_braillePatternDots_2478", test_braillePatternDots_2478),
        ("test_braillePatternDots_248", test_braillePatternDots_248),
        ("test_braillePatternDots_25", test_braillePatternDots_25),
        ("test_braillePatternDots_256", test_braillePatternDots_256),
        ("test_braillePatternDots_2567", test_braillePatternDots_2567),
        ("test_braillePatternDots_25678", test_braillePatternDots_25678),
        ("test_braillePatternDots_2568", test_braillePatternDots_2568),
        ("test_braillePatternDots_257", test_braillePatternDots_257),
        ("test_braillePatternDots_2578", test_braillePatternDots_2578),
        ("test_braillePatternDots_258", test_braillePatternDots_258),
        ("test_braillePatternDots_26", test_braillePatternDots_26),
        ("test_braillePatternDots_267", test_braillePatternDots_267),
        ("test_braillePatternDots_2678", test_braillePatternDots_2678),
        ("test_braillePatternDots_268", test_braillePatternDots_268),
        ("test_braillePatternDots_27", test_braillePatternDots_27),
        ("test_braillePatternDots_278", test_braillePatternDots_278),
        ("test_braillePatternDots_28", test_braillePatternDots_28),
        ("test_braillePatternDots_3", test_braillePatternDots_3),
        ("test_braillePatternDots_34", test_braillePatternDots_34),
        ("test_braillePatternDots_345", test_braillePatternDots_345),
        ("test_braillePatternDots_3456", test_braillePatternDots_3456),
        ("test_braillePatternDots_34567", test_braillePatternDots_34567),
        ("test_braillePatternDots_345678", test_braillePatternDots_345678),
        ("test_braillePatternDots_34568", test_braillePatternDots_34568),
        ("test_braillePatternDots_3457", test_braillePatternDots_3457),
        ("test_braillePatternDots_34578", test_braillePatternDots_34578),
        ("test_braillePatternDots_3458", test_braillePatternDots_3458),
        ("test_braillePatternDots_346", test_braillePatternDots_346),
        ("test_braillePatternDots_3467", test_braillePatternDots_3467),
        ("test_braillePatternDots_34678", test_braillePatternDots_34678),
        ("test_braillePatternDots_3468", test_braillePatternDots_3468),
        ("test_braillePatternDots_347", test_braillePatternDots_347),
        ("test_braillePatternDots_3478", test_braillePatternDots_3478),
        ("test_braillePatternDots_348", test_braillePatternDots_348),
        ("test_braillePatternDots_35", test_braillePatternDots_35),
        ("test_braillePatternDots_356", test_braillePatternDots_356),
        ("test_braillePatternDots_3567", test_braillePatternDots_3567),
        ("test_braillePatternDots_35678", test_braillePatternDots_35678),
        ("test_braillePatternDots_3568", test_braillePatternDots_3568),
        ("test_braillePatternDots_357", test_braillePatternDots_357),
        ("test_braillePatternDots_3578", test_braillePatternDots_3578),
        ("test_braillePatternDots_358", test_braillePatternDots_358),
        ("test_braillePatternDots_36", test_braillePatternDots_36),
        ("test_braillePatternDots_367", test_braillePatternDots_367),
        ("test_braillePatternDots_3678", test_braillePatternDots_3678),
        ("test_braillePatternDots_368", test_braillePatternDots_368),
        ("test_braillePatternDots_37", test_braillePatternDots_37),
        ("test_braillePatternDots_378", test_braillePatternDots_378),
        ("test_braillePatternDots_38", test_braillePatternDots_38),
        ("test_braillePatternDots_4", test_braillePatternDots_4),
        ("test_braillePatternDots_45", test_braillePatternDots_45),
        ("test_braillePatternDots_456", test_braillePatternDots_456),
        ("test_braillePatternDots_4567", test_braillePatternDots_4567),
        ("test_braillePatternDots_45678", test_braillePatternDots_45678),
        ("test_braillePatternDots_4568", test_braillePatternDots_4568),
        ("test_braillePatternDots_457", test_braillePatternDots_457),
        ("test_braillePatternDots_4578", test_braillePatternDots_4578),
        ("test_braillePatternDots_458", test_braillePatternDots_458),
        ("test_braillePatternDots_46", test_braillePatternDots_46),
        ("test_braillePatternDots_467", test_braillePatternDots_467),
        ("test_braillePatternDots_4678", test_braillePatternDots_4678),
        ("test_braillePatternDots_468", test_braillePatternDots_468),
        ("test_braillePatternDots_47", test_braillePatternDots_47),
        ("test_braillePatternDots_478", test_braillePatternDots_478),
        ("test_braillePatternDots_48", test_braillePatternDots_48),
        ("test_braillePatternDots_5", test_braillePatternDots_5),
        ("test_braillePatternDots_56", test_braillePatternDots_56),
        ("test_braillePatternDots_567", test_braillePatternDots_567),
        ("test_braillePatternDots_5678", test_braillePatternDots_5678),
        ("test_braillePatternDots_568", test_braillePatternDots_568),
        ("test_braillePatternDots_57", test_braillePatternDots_57),
        ("test_braillePatternDots_578", test_braillePatternDots_578),
        ("test_braillePatternDots_58", test_braillePatternDots_58),
        ("test_braillePatternDots_6", test_braillePatternDots_6),
        ("test_braillePatternDots_67", test_braillePatternDots_67),
        ("test_braillePatternDots_678", test_braillePatternDots_678),
        ("test_braillePatternDots_68", test_braillePatternDots_68),
        ("test_braillePatternDots_7", test_braillePatternDots_7),
        ("test_braillePatternDots_78", test_braillePatternDots_78),
        ("test_braillePatternDots_8", test_braillePatternDots_8),
    ]
}

extension UnicodeDataChessSymbolsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataChessSymbolsTests = [
        ("test_xiangqiBlackCannon", test_xiangqiBlackCannon),
        ("test_xiangqiBlackChariot", test_xiangqiBlackChariot),
        ("test_xiangqiBlackElephant", test_xiangqiBlackElephant),
        ("test_xiangqiBlackGeneral", test_xiangqiBlackGeneral),
        ("test_xiangqiBlackHorse", test_xiangqiBlackHorse),
        ("test_xiangqiBlackMandarin", test_xiangqiBlackMandarin),
        ("test_xiangqiBlackSoldier", test_xiangqiBlackSoldier),
        ("test_xiangqiRedCannon", test_xiangqiRedCannon),
        ("test_xiangqiRedChariot", test_xiangqiRedChariot),
        ("test_xiangqiRedElephant", test_xiangqiRedElephant),
        ("test_xiangqiRedGeneral", test_xiangqiRedGeneral),
        ("test_xiangqiRedHorse", test_xiangqiRedHorse),
        ("test_xiangqiRedMandarin", test_xiangqiRedMandarin),
        ("test_xiangqiRedSoldier", test_xiangqiRedSoldier),
    ]
}

extension UnicodeDataCombiningDiacriticalMarksTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataCombiningDiacriticalMarksTests = [
        ("test_combiningAcuteAccent", test_combiningAcuteAccent),
        ("test_combiningAcuteAccentBelow", test_combiningAcuteAccentBelow),
        ("test_combiningAcuteToneMark", test_combiningAcuteToneMark),
        ("test_combiningAlmostEqualToAbove", test_combiningAlmostEqualToAbove),
        ("test_combiningAsteriskBelow", test_combiningAsteriskBelow),
        ("test_combiningBreve", test_combiningBreve),
        ("test_combiningBreveBelow", test_combiningBreveBelow),
        ("test_combiningBridgeAbove", test_combiningBridgeAbove),
        ("test_combiningBridgeBelow", test_combiningBridgeBelow),
        ("test_combiningCandrabindu", test_combiningCandrabindu),
        ("test_combiningCaron", test_combiningCaron),
        ("test_combiningCaronBelow", test_combiningCaronBelow),
        ("test_combiningCedilla", test_combiningCedilla),
        ("test_combiningCircumflexAccent", test_combiningCircumflexAccent),
        ("test_combiningCircumflexAccentBelow", test_combiningCircumflexAccentBelow),
        ("test_combiningCommaAbove", test_combiningCommaAbove),
        ("test_combiningCommaAboveRight", test_combiningCommaAboveRight),
        ("test_combiningCommaBelow", test_combiningCommaBelow),
        ("test_combiningDiaeresis", test_combiningDiaeresis),
        ("test_combiningDiaeresisBelow", test_combiningDiaeresisBelow),
        ("test_combiningDotAbove", test_combiningDotAbove),
        ("test_combiningDotAboveRight", test_combiningDotAboveRight),
        ("test_combiningDotBelow", test_combiningDotBelow),
        ("test_combiningDoubleAcuteAccent", test_combiningDoubleAcuteAccent),
        ("test_combiningDoubleBreve", test_combiningDoubleBreve),
        ("test_combiningDoubleBreveBelow", test_combiningDoubleBreveBelow),
        ("test_combiningDoubleGraveAccent", test_combiningDoubleGraveAccent),
        ("test_combiningDoubleInvertedBreve", test_combiningDoubleInvertedBreve),
        ("test_combiningDoubleLowLine", test_combiningDoubleLowLine),
        ("test_combiningDoubleMacron", test_combiningDoubleMacron),
        ("test_combiningDoubleMacronBelow", test_combiningDoubleMacronBelow),
        ("test_combiningDoubleOverline", test_combiningDoubleOverline),
        ("test_combiningDoubleRightwardsArrowBelow", test_combiningDoubleRightwardsArrowBelow),
        ("test_combiningDoubleRingBelow", test_combiningDoubleRingBelow),
        ("test_combiningDoubleTilde", test_combiningDoubleTilde),
        ("test_combiningDoubleVerticalLineAbove", test_combiningDoubleVerticalLineAbove),
        ("test_combiningDoubleVerticalLineBelow", test_combiningDoubleVerticalLineBelow),
        ("test_combiningDownTackBelow", test_combiningDownTackBelow),
        ("test_combiningEqualsSignBelow", test_combiningEqualsSignBelow),
        ("test_combiningFermata", test_combiningFermata),
        ("test_combiningGraphemeJoiner", test_combiningGraphemeJoiner),
        ("test_combiningGraveAccent", test_combiningGraveAccent),
        ("test_combiningGraveAccentBelow", test_combiningGraveAccentBelow),
        ("test_combiningGraveToneMark", test_combiningGraveToneMark),
        ("test_combiningGreekDialytikaTonos", test_combiningGreekDialytikaTonos),
        ("test_combiningGreekKoronis", test_combiningGreekKoronis),
        ("test_combiningGreekPerispomeni", test_combiningGreekPerispomeni),
        ("test_combiningGreekYpogegrammeni", test_combiningGreekYpogegrammeni),
        ("test_combiningHomotheticAbove", test_combiningHomotheticAbove),
        ("test_combiningHookAbove", test_combiningHookAbove),
        ("test_combiningHorn", test_combiningHorn),
        ("test_combiningInvertedBreve", test_combiningInvertedBreve),
        ("test_combiningInvertedBreveBelow", test_combiningInvertedBreveBelow),
        ("test_combiningInvertedBridgeBelow", test_combiningInvertedBridgeBelow),
        ("test_combiningInvertedDoubleArchBelow", test_combiningInvertedDoubleArchBelow),
        ("test_combiningLatinSmallLetterA", test_combiningLatinSmallLetterA),
        ("test_combiningLatinSmallLetterC", test_combiningLatinSmallLetterC),
        ("test_combiningLatinSmallLetterD", test_combiningLatinSmallLetterD),
        ("test_combiningLatinSmallLetterE", test_combiningLatinSmallLetterE),
        ("test_combiningLatinSmallLetterH", test_combiningLatinSmallLetterH),
        ("test_combiningLatinSmallLetterI", test_combiningLatinSmallLetterI),
        ("test_combiningLatinSmallLetterM", test_combiningLatinSmallLetterM),
        ("test_combiningLatinSmallLetterO", test_combiningLatinSmallLetterO),
        ("test_combiningLatinSmallLetterR", test_combiningLatinSmallLetterR),
        ("test_combiningLatinSmallLetterT", test_combiningLatinSmallLetterT),
        ("test_combiningLatinSmallLetterU", test_combiningLatinSmallLetterU),
        ("test_combiningLatinSmallLetterV", test_combiningLatinSmallLetterV),
        ("test_combiningLatinSmallLetterX", test_combiningLatinSmallLetterX),
        ("test_combiningLeftAngleAbove", test_combiningLeftAngleAbove),
        ("test_combiningLeftAngleBelow", test_combiningLeftAngleBelow),
        ("test_combiningLeftArrowheadBelow", test_combiningLeftArrowheadBelow),
        ("test_combiningLeftHalfRingAbove", test_combiningLeftHalfRingAbove),
        ("test_combiningLeftHalfRingBelow", test_combiningLeftHalfRingBelow),
        ("test_combiningLeftRightArrowBelow", test_combiningLeftRightArrowBelow),
        ("test_combiningLeftTackBelow", test_combiningLeftTackBelow),
        ("test_combiningLongSolidusOverlay", test_combiningLongSolidusOverlay),
        ("test_combiningLongStrokeOverlay", test_combiningLongStrokeOverlay),
        ("test_combiningLowLine", test_combiningLowLine),
        ("test_combiningMacron", test_combiningMacron),
        ("test_combiningMacronBelow", test_combiningMacronBelow),
        ("test_combiningMinusSignBelow", test_combiningMinusSignBelow),
        ("test_combiningNotTildeAbove", test_combiningNotTildeAbove),
        ("test_combiningOgonek", test_combiningOgonek),
        ("test_combiningOverline", test_combiningOverline),
        ("test_combiningPalatalizedHookBelow", test_combiningPalatalizedHookBelow),
        ("test_combiningPlusSignBelow", test_combiningPlusSignBelow),
        ("test_combiningRetroflexHookBelow", test_combiningRetroflexHookBelow),
        ("test_combiningReversedCommaAbove", test_combiningReversedCommaAbove),
        ("test_combiningRightArrowheadAbove", test_combiningRightArrowheadAbove),
        ("test_combiningRightArrowheadAndUpArrowheadBelow", test_combiningRightArrowheadAndUpArrowheadBelow),
        ("test_combiningRightArrowheadBelow", test_combiningRightArrowheadBelow),
        ("test_combiningRightHalfRingAbove", test_combiningRightHalfRingAbove),
        ("test_combiningRightHalfRingBelow", test_combiningRightHalfRingBelow),
        ("test_combiningRightTackBelow", test_combiningRightTackBelow),
        ("test_combiningRingAbove", test_combiningRingAbove),
        ("test_combiningRingBelow", test_combiningRingBelow),
        ("test_combiningSeagullBelow", test_combiningSeagullBelow),
        ("test_combiningShortSolidusOverlay", test_combiningShortSolidusOverlay),
        ("test_combiningShortStrokeOverlay", test_combiningShortStrokeOverlay),
        ("test_combiningSquareBelow", test_combiningSquareBelow),
        ("test_combiningTilde", test_combiningTilde),
        ("test_combiningTildeBelow", test_combiningTildeBelow),
        ("test_combiningTildeOverlay", test_combiningTildeOverlay),
        ("test_combiningTurnedCommaAbove", test_combiningTurnedCommaAbove),
        ("test_combiningUpTackBelow", test_combiningUpTackBelow),
        ("test_combiningUpwardsArrowBelow", test_combiningUpwardsArrowBelow),
        ("test_combiningVerticalLineAbove", test_combiningVerticalLineAbove),
        ("test_combiningVerticalLineBelow", test_combiningVerticalLineBelow),
        ("test_combiningVerticalTilde", test_combiningVerticalTilde),
        ("test_combiningXAbove", test_combiningXAbove),
        ("test_combiningXBelow", test_combiningXBelow),
        ("test_combiningZigzagAbove", test_combiningZigzagAbove),
    ]
}

extension UnicodeDataDoesNotCrashTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataDoesNotCrashTests = [
        ("test_iterateAll", test_iterateAll),
    ]
}

extension UnicodeDataEmoticonsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataEmoticonsTests = [
        ("test_angryFace", test_angryFace),
        ("test_anguishedFace", test_anguishedFace),
        ("test_astonishedFace", test_astonishedFace),
        ("test_catFaceWithTearsOfJoy", test_catFaceWithTearsOfJoy),
        ("test_catFaceWithWrySmile", test_catFaceWithWrySmile),
        ("test_confoundedFace", test_confoundedFace),
        ("test_confusedFace", test_confusedFace),
        ("test_cryingCatFace", test_cryingCatFace),
        ("test_cryingFace", test_cryingFace),
        ("test_disappointedButRelievedFace", test_disappointedButRelievedFace),
        ("test_disappointedFace", test_disappointedFace),
        ("test_dizzyFace", test_dizzyFace),
        ("test_expressionlessFace", test_expressionlessFace),
        ("test_faceSavouringDeliciousFood", test_faceSavouringDeliciousFood),
        ("test_faceScreamingInFear", test_faceScreamingInFear),
        ("test_faceThrowingAKiss", test_faceThrowingAKiss),
        ("test_faceWithColdSweat", test_faceWithColdSweat),
        ("test_faceWithLookOfTriumph", test_faceWithLookOfTriumph),
        ("test_faceWithMedicalMask", test_faceWithMedicalMask),
        ("test_faceWithNoGoodGesture", test_faceWithNoGoodGesture),
        ("test_faceWithOkGesture", test_faceWithOkGesture),
        ("test_faceWithOpenMouth", test_faceWithOpenMouth),
        ("test_faceWithOpenMouthAndColdSweat", test_faceWithOpenMouthAndColdSweat),
        ("test_faceWithoutMouth", test_faceWithoutMouth),
        ("test_faceWithRollingEyes", test_faceWithRollingEyes),
        ("test_faceWithStuck_outTongue", test_faceWithStuck_outTongue),
        ("test_faceWithStuck_outTongueAndTightly_closedEyes", test_faceWithStuck_outTongueAndTightly_closedEyes),
        ("test_faceWithStuck_outTongueAndWinkingEye", test_faceWithStuck_outTongueAndWinkingEye),
        ("test_faceWithTearsOfJoy", test_faceWithTearsOfJoy),
        ("test_fearfulFace", test_fearfulFace),
        ("test_flushedFace", test_flushedFace),
        ("test_frowningFaceWithOpenMouth", test_frowningFaceWithOpenMouth),
        ("test_grimacingFace", test_grimacingFace),
        ("test_grinningCatFaceWithSmilingEyes", test_grinningCatFaceWithSmilingEyes),
        ("test_grinningFace", test_grinningFace),
        ("test_grinningFaceWithSmilingEyes", test_grinningFaceWithSmilingEyes),
        ("test_happyPersonRaisingOneHand", test_happyPersonRaisingOneHand),
        ("test_hear_no_evilMonkey", test_hear_no_evilMonkey),
        ("test_hushedFace", test_hushedFace),
        ("test_kissingCatFaceWithClosedEyes", test_kissingCatFaceWithClosedEyes),
        ("test_kissingFace", test_kissingFace),
        ("test_kissingFaceWithClosedEyes", test_kissingFaceWithClosedEyes),
        ("test_kissingFaceWithSmilingEyes", test_kissingFaceWithSmilingEyes),
        ("test_loudlyCryingFace", test_loudlyCryingFace),
        ("test_neutralFace", test_neutralFace),
        ("test_pensiveFace", test_pensiveFace),
        ("test_perseveringFace", test_perseveringFace),
        ("test_personBowingDeeply", test_personBowingDeeply),
        ("test_personFrowning", test_personFrowning),
        ("test_personRaisingBothHandsInCelebration", test_personRaisingBothHandsInCelebration),
        ("test_personWithFoldedHands", test_personWithFoldedHands),
        ("test_personWithPoutingFace", test_personWithPoutingFace),
        ("test_poutingCatFace", test_poutingCatFace),
        ("test_poutingFace", test_poutingFace),
        ("test_relievedFace", test_relievedFace),
        ("test_see_no_evilMonkey", test_see_no_evilMonkey),
        ("test_sleepingFace", test_sleepingFace),
        ("test_sleepyFace", test_sleepyFace),
        ("test_slightlyFrowningFace", test_slightlyFrowningFace),
        ("test_slightlySmilingFace", test_slightlySmilingFace),
        ("test_smilingCatFaceWithHeart_shapedEyes", test_smilingCatFaceWithHeart_shapedEyes),
        ("test_smilingCatFaceWithOpenMouth", test_smilingCatFaceWithOpenMouth),
        ("test_smilingFaceWithHalo", test_smilingFaceWithHalo),
        ("test_smilingFaceWithHeart_shapedEyes", test_smilingFaceWithHeart_shapedEyes),
        ("test_smilingFaceWithHorns", test_smilingFaceWithHorns),
        ("test_smilingFaceWithOpenMouth", test_smilingFaceWithOpenMouth),
        ("test_smilingFaceWithOpenMouthAndColdSweat", test_smilingFaceWithOpenMouthAndColdSweat),
        ("test_smilingFaceWithOpenMouthAndSmilingEyes", test_smilingFaceWithOpenMouthAndSmilingEyes),
        ("test_smilingFaceWithOpenMouthAndTightly_closedEyes", test_smilingFaceWithOpenMouthAndTightly_closedEyes),
        ("test_smilingFaceWithSmilingEyes", test_smilingFaceWithSmilingEyes),
        ("test_smilingFaceWithSunglasses", test_smilingFaceWithSunglasses),
        ("test_smirkingFace", test_smirkingFace),
        ("test_speak_no_evilMonkey", test_speak_no_evilMonkey),
        ("test_tiredFace", test_tiredFace),
        ("test_unamusedFace", test_unamusedFace),
        ("test_upside_downFace", test_upside_downFace),
        ("test_wearyCatFace", test_wearyCatFace),
        ("test_wearyFace", test_wearyFace),
        ("test_winkingFace", test_winkingFace),
        ("test_worriedFace", test_worriedFace),
    ]
}

extension UnicodeDataHangulJamoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataHangulJamoTests = [
        ("test_hangulChoseongCeongchieumchieuch", test_hangulChoseongCeongchieumchieuch),
        ("test_hangulChoseongCeongchieumcieuc", test_hangulChoseongCeongchieumcieuc),
        ("test_hangulChoseongCeongchieumsios", test_hangulChoseongCeongchieumsios),
        ("test_hangulChoseongCeongchieumssangcieuc", test_hangulChoseongCeongchieumssangcieuc),
        ("test_hangulChoseongCeongchieumssangsios", test_hangulChoseongCeongchieumssangsios),
        ("test_hangulChoseongChieuch", test_hangulChoseongChieuch),
        ("test_hangulChoseongChieuch_hieuh", test_hangulChoseongChieuch_hieuh),
        ("test_hangulChoseongChieuch_khieukh", test_hangulChoseongChieuch_khieukh),
        ("test_hangulChoseongChitueumchieuch", test_hangulChoseongChitueumchieuch),
        ("test_hangulChoseongChitueumcieuc", test_hangulChoseongChitueumcieuc),
        ("test_hangulChoseongChitueumsios", test_hangulChoseongChitueumsios),
        ("test_hangulChoseongChitueumssangcieuc", test_hangulChoseongChitueumssangcieuc),
        ("test_hangulChoseongChitueumssangsios", test_hangulChoseongChitueumssangsios),
        ("test_hangulChoseongCieuc", test_hangulChoseongCieuc),
        ("test_hangulChoseongCieuc_ieung", test_hangulChoseongCieuc_ieung),
        ("test_hangulChoseongFiller", test_hangulChoseongFiller),
        ("test_hangulChoseongHieuh", test_hangulChoseongHieuh),
        ("test_hangulChoseongIeung", test_hangulChoseongIeung),
        ("test_hangulChoseongIeung_chieuch", test_hangulChoseongIeung_chieuch),
        ("test_hangulChoseongIeung_cieuc", test_hangulChoseongIeung_cieuc),
        ("test_hangulChoseongIeung_kiyeok", test_hangulChoseongIeung_kiyeok),
        ("test_hangulChoseongIeung_mieum", test_hangulChoseongIeung_mieum),
        ("test_hangulChoseongIeung_pansios", test_hangulChoseongIeung_pansios),
        ("test_hangulChoseongIeung_phieuph", test_hangulChoseongIeung_phieuph),
        ("test_hangulChoseongIeung_pieup", test_hangulChoseongIeung_pieup),
        ("test_hangulChoseongIeung_sios", test_hangulChoseongIeung_sios),
        ("test_hangulChoseongIeung_thieuth", test_hangulChoseongIeung_thieuth),
        ("test_hangulChoseongIeung_tikeut", test_hangulChoseongIeung_tikeut),
        ("test_hangulChoseongKapyeounmieum", test_hangulChoseongKapyeounmieum),
        ("test_hangulChoseongKapyeounphieuph", test_hangulChoseongKapyeounphieuph),
        ("test_hangulChoseongKapyeounpieup", test_hangulChoseongKapyeounpieup),
        ("test_hangulChoseongKapyeounrieul", test_hangulChoseongKapyeounrieul),
        ("test_hangulChoseongKapyeounssangpieup", test_hangulChoseongKapyeounssangpieup),
        ("test_hangulChoseongKhieukh", test_hangulChoseongKhieukh),
        ("test_hangulChoseongKiyeok", test_hangulChoseongKiyeok),
        ("test_hangulChoseongKiyeok_tikeut", test_hangulChoseongKiyeok_tikeut),
        ("test_hangulChoseongMieum", test_hangulChoseongMieum),
        ("test_hangulChoseongMieum_pieup", test_hangulChoseongMieum_pieup),
        ("test_hangulChoseongNieun", test_hangulChoseongNieun),
        ("test_hangulChoseongNieun_cieuc", test_hangulChoseongNieun_cieuc),
        ("test_hangulChoseongNieun_hieuh", test_hangulChoseongNieun_hieuh),
        ("test_hangulChoseongNieun_kiyeok", test_hangulChoseongNieun_kiyeok),
        ("test_hangulChoseongNieun_pieup", test_hangulChoseongNieun_pieup),
        ("test_hangulChoseongNieun_sios", test_hangulChoseongNieun_sios),
        ("test_hangulChoseongNieun_tikeut", test_hangulChoseongNieun_tikeut),
        ("test_hangulChoseongPansios", test_hangulChoseongPansios),
        ("test_hangulChoseongPhieuph", test_hangulChoseongPhieuph),
        ("test_hangulChoseongPhieuph_pieup", test_hangulChoseongPhieuph_pieup),
        ("test_hangulChoseongPieup", test_hangulChoseongPieup),
        ("test_hangulChoseongPieup_chieuch", test_hangulChoseongPieup_chieuch),
        ("test_hangulChoseongPieup_cieuc", test_hangulChoseongPieup_cieuc),
        ("test_hangulChoseongPieup_kiyeok", test_hangulChoseongPieup_kiyeok),
        ("test_hangulChoseongPieup_nieun", test_hangulChoseongPieup_nieun),
        ("test_hangulChoseongPieup_phieuph", test_hangulChoseongPieup_phieuph),
        ("test_hangulChoseongPieup_sios", test_hangulChoseongPieup_sios),
        ("test_hangulChoseongPieup_sios_cieuc", test_hangulChoseongPieup_sios_cieuc),
        ("test_hangulChoseongPieup_sios_kiyeok", test_hangulChoseongPieup_sios_kiyeok),
        ("test_hangulChoseongPieup_sios_pieup", test_hangulChoseongPieup_sios_pieup),
        ("test_hangulChoseongPieup_sios_tikeut", test_hangulChoseongPieup_sios_tikeut),
        ("test_hangulChoseongPieup_ssangsios", test_hangulChoseongPieup_ssangsios),
        ("test_hangulChoseongPieup_thieuth", test_hangulChoseongPieup_thieuth),
        ("test_hangulChoseongPieup_tikeut", test_hangulChoseongPieup_tikeut),
        ("test_hangulChoseongRieul", test_hangulChoseongRieul),
        ("test_hangulChoseongRieul_hieuh", test_hangulChoseongRieul_hieuh),
        ("test_hangulChoseongRieul_nieun", test_hangulChoseongRieul_nieun),
        ("test_hangulChoseongSios", test_hangulChoseongSios),
        ("test_hangulChoseongSios_chieuch", test_hangulChoseongSios_chieuch),
        ("test_hangulChoseongSios_cieuc", test_hangulChoseongSios_cieuc),
        ("test_hangulChoseongSios_hieuh", test_hangulChoseongSios_hieuh),
        ("test_hangulChoseongSios_ieung", test_hangulChoseongSios_ieung),
        ("test_hangulChoseongSios_khieukh", test_hangulChoseongSios_khieukh),
        ("test_hangulChoseongSios_kiyeok", test_hangulChoseongSios_kiyeok),
        ("test_hangulChoseongSios_mieum", test_hangulChoseongSios_mieum),
        ("test_hangulChoseongSios_nieun", test_hangulChoseongSios_nieun),
        ("test_hangulChoseongSios_phieuph", test_hangulChoseongSios_phieuph),
        ("test_hangulChoseongSios_pieup", test_hangulChoseongSios_pieup),
        ("test_hangulChoseongSios_pieup_kiyeok", test_hangulChoseongSios_pieup_kiyeok),
        ("test_hangulChoseongSios_rieul", test_hangulChoseongSios_rieul),
        ("test_hangulChoseongSios_ssangsios", test_hangulChoseongSios_ssangsios),
        ("test_hangulChoseongSios_thieuth", test_hangulChoseongSios_thieuth),
        ("test_hangulChoseongSios_tikeut", test_hangulChoseongSios_tikeut),
        ("test_hangulChoseongSsangcieuc", test_hangulChoseongSsangcieuc),
        ("test_hangulChoseongSsanghieuh", test_hangulChoseongSsanghieuh),
        ("test_hangulChoseongSsangieung", test_hangulChoseongSsangieung),
        ("test_hangulChoseongSsangkiyeok", test_hangulChoseongSsangkiyeok),
        ("test_hangulChoseongSsangnieun", test_hangulChoseongSsangnieun),
        ("test_hangulChoseongSsangpieup", test_hangulChoseongSsangpieup),
        ("test_hangulChoseongSsangrieul", test_hangulChoseongSsangrieul),
        ("test_hangulChoseongSsangsios", test_hangulChoseongSsangsios),
        ("test_hangulChoseongSsangtikeut", test_hangulChoseongSsangtikeut),
        ("test_hangulChoseongThieuth", test_hangulChoseongThieuth),
        ("test_hangulChoseongTikeut", test_hangulChoseongTikeut),
        ("test_hangulChoseongTikeut_kiyeok", test_hangulChoseongTikeut_kiyeok),
        ("test_hangulChoseongTikeut_rieul", test_hangulChoseongTikeut_rieul),
        ("test_hangulChoseongYeorinhieuh", test_hangulChoseongYeorinhieuh),
        ("test_hangulChoseongYesieung", test_hangulChoseongYesieung),
        ("test_hangulJongseongChieuch", test_hangulJongseongChieuch),
        ("test_hangulJongseongCieuc", test_hangulJongseongCieuc),
        ("test_hangulJongseongHieuh", test_hangulJongseongHieuh),
        ("test_hangulJongseongHieuh_mieum", test_hangulJongseongHieuh_mieum),
        ("test_hangulJongseongHieuh_nieun", test_hangulJongseongHieuh_nieun),
        ("test_hangulJongseongHieuh_pieup", test_hangulJongseongHieuh_pieup),
        ("test_hangulJongseongHieuh_rieul", test_hangulJongseongHieuh_rieul),
        ("test_hangulJongseongIeung", test_hangulJongseongIeung),
        ("test_hangulJongseongIeung_khieukh", test_hangulJongseongIeung_khieukh),
        ("test_hangulJongseongIeung_kiyeok", test_hangulJongseongIeung_kiyeok),
        ("test_hangulJongseongIeung_ssangkiyeok", test_hangulJongseongIeung_ssangkiyeok),
        ("test_hangulJongseongKapyeounmieum", test_hangulJongseongKapyeounmieum),
        ("test_hangulJongseongKapyeounphieuph", test_hangulJongseongKapyeounphieuph),
        ("test_hangulJongseongKapyeounpieup", test_hangulJongseongKapyeounpieup),
        ("test_hangulJongseongKhieukh", test_hangulJongseongKhieukh),
        ("test_hangulJongseongKiyeok", test_hangulJongseongKiyeok),
        ("test_hangulJongseongKiyeok_chieuch", test_hangulJongseongKiyeok_chieuch),
        ("test_hangulJongseongKiyeok_hieuh", test_hangulJongseongKiyeok_hieuh),
        ("test_hangulJongseongKiyeok_khieukh", test_hangulJongseongKiyeok_khieukh),
        ("test_hangulJongseongKiyeok_nieun", test_hangulJongseongKiyeok_nieun),
        ("test_hangulJongseongKiyeok_pieup", test_hangulJongseongKiyeok_pieup),
        ("test_hangulJongseongKiyeok_rieul", test_hangulJongseongKiyeok_rieul),
        ("test_hangulJongseongKiyeok_sios", test_hangulJongseongKiyeok_sios),
        ("test_hangulJongseongKiyeok_sios_kiyeok", test_hangulJongseongKiyeok_sios_kiyeok),
        ("test_hangulJongseongMieum", test_hangulJongseongMieum),
        ("test_hangulJongseongMieum_chieuch", test_hangulJongseongMieum_chieuch),
        ("test_hangulJongseongMieum_hieuh", test_hangulJongseongMieum_hieuh),
        ("test_hangulJongseongMieum_kiyeok", test_hangulJongseongMieum_kiyeok),
        ("test_hangulJongseongMieum_pansios", test_hangulJongseongMieum_pansios),
        ("test_hangulJongseongMieum_pieup", test_hangulJongseongMieum_pieup),
        ("test_hangulJongseongMieum_rieul", test_hangulJongseongMieum_rieul),
        ("test_hangulJongseongMieum_sios", test_hangulJongseongMieum_sios),
        ("test_hangulJongseongMieum_ssangsios", test_hangulJongseongMieum_ssangsios),
        ("test_hangulJongseongNieun", test_hangulJongseongNieun),
        ("test_hangulJongseongNieun_cieuc", test_hangulJongseongNieun_cieuc),
        ("test_hangulJongseongNieun_hieuh", test_hangulJongseongNieun_hieuh),
        ("test_hangulJongseongNieun_kiyeok", test_hangulJongseongNieun_kiyeok),
        ("test_hangulJongseongNieun_pansios", test_hangulJongseongNieun_pansios),
        ("test_hangulJongseongNieun_sios", test_hangulJongseongNieun_sios),
        ("test_hangulJongseongNieun_thieuth", test_hangulJongseongNieun_thieuth),
        ("test_hangulJongseongNieun_tikeut", test_hangulJongseongNieun_tikeut),
        ("test_hangulJongseongPansios", test_hangulJongseongPansios),
        ("test_hangulJongseongPhieuph", test_hangulJongseongPhieuph),
        ("test_hangulJongseongPhieuph_pieup", test_hangulJongseongPhieuph_pieup),
        ("test_hangulJongseongPieup", test_hangulJongseongPieup),
        ("test_hangulJongseongPieup_hieuh", test_hangulJongseongPieup_hieuh),
        ("test_hangulJongseongPieup_phieuph", test_hangulJongseongPieup_phieuph),
        ("test_hangulJongseongPieup_rieul", test_hangulJongseongPieup_rieul),
        ("test_hangulJongseongPieup_sios", test_hangulJongseongPieup_sios),
        ("test_hangulJongseongRieul", test_hangulJongseongRieul),
        ("test_hangulJongseongRieul_hieuh", test_hangulJongseongRieul_hieuh),
        ("test_hangulJongseongRieul_kapyeounpieup", test_hangulJongseongRieul_kapyeounpieup),
        ("test_hangulJongseongRieul_khieukh", test_hangulJongseongRieul_khieukh),
        ("test_hangulJongseongRieul_kiyeok", test_hangulJongseongRieul_kiyeok),
        ("test_hangulJongseongRieul_kiyeok_sios", test_hangulJongseongRieul_kiyeok_sios),
        ("test_hangulJongseongRieul_mieum", test_hangulJongseongRieul_mieum),
        ("test_hangulJongseongRieul_mieum_kiyeok", test_hangulJongseongRieul_mieum_kiyeok),
        ("test_hangulJongseongRieul_mieum_sios", test_hangulJongseongRieul_mieum_sios),
        ("test_hangulJongseongRieul_nieun", test_hangulJongseongRieul_nieun),
        ("test_hangulJongseongRieul_pansios", test_hangulJongseongRieul_pansios),
        ("test_hangulJongseongRieul_phieuph", test_hangulJongseongRieul_phieuph),
        ("test_hangulJongseongRieul_pieup", test_hangulJongseongRieul_pieup),
        ("test_hangulJongseongRieul_pieup_hieuh", test_hangulJongseongRieul_pieup_hieuh),
        ("test_hangulJongseongRieul_pieup_sios", test_hangulJongseongRieul_pieup_sios),
        ("test_hangulJongseongRieul_sios", test_hangulJongseongRieul_sios),
        ("test_hangulJongseongRieul_ssangsios", test_hangulJongseongRieul_ssangsios),
        ("test_hangulJongseongRieul_thieuth", test_hangulJongseongRieul_thieuth),
        ("test_hangulJongseongRieul_tikeut", test_hangulJongseongRieul_tikeut),
        ("test_hangulJongseongRieul_tikeut_hieuh", test_hangulJongseongRieul_tikeut_hieuh),
        ("test_hangulJongseongRieul_yeorinhieuh", test_hangulJongseongRieul_yeorinhieuh),
        ("test_hangulJongseongSios", test_hangulJongseongSios),
        ("test_hangulJongseongSios_kiyeok", test_hangulJongseongSios_kiyeok),
        ("test_hangulJongseongSios_pieup", test_hangulJongseongSios_pieup),
        ("test_hangulJongseongSios_rieul", test_hangulJongseongSios_rieul),
        ("test_hangulJongseongSios_tikeut", test_hangulJongseongSios_tikeut),
        ("test_hangulJongseongSsangieung", test_hangulJongseongSsangieung),
        ("test_hangulJongseongSsangkiyeok", test_hangulJongseongSsangkiyeok),
        ("test_hangulJongseongSsangnieun", test_hangulJongseongSsangnieun),
        ("test_hangulJongseongSsangrieul", test_hangulJongseongSsangrieul),
        ("test_hangulJongseongSsangsios", test_hangulJongseongSsangsios),
        ("test_hangulJongseongThieuth", test_hangulJongseongThieuth),
        ("test_hangulJongseongTikeut", test_hangulJongseongTikeut),
        ("test_hangulJongseongTikeut_kiyeok", test_hangulJongseongTikeut_kiyeok),
        ("test_hangulJongseongTikeut_rieul", test_hangulJongseongTikeut_rieul),
        ("test_hangulJongseongYeorinhieuh", test_hangulJongseongYeorinhieuh),
        ("test_hangulJongseongYesieung", test_hangulJongseongYesieung),
        ("test_hangulJongseongYesieung_pansios", test_hangulJongseongYesieung_pansios),
        ("test_hangulJongseongYesieung_sios", test_hangulJongseongYesieung_sios),
        ("test_hangulJungseongA", test_hangulJungseongA),
        ("test_hangulJungseongA_eu", test_hangulJungseongA_eu),
        ("test_hangulJungseongA_o", test_hangulJungseongA_o),
        ("test_hangulJungseongA_u", test_hangulJungseongA_u),
        ("test_hangulJungseongAe", test_hangulJungseongAe),
        ("test_hangulJungseongAraea", test_hangulJungseongAraea),
        ("test_hangulJungseongAraea_eo", test_hangulJungseongAraea_eo),
        ("test_hangulJungseongAraea_i", test_hangulJungseongAraea_i),
        ("test_hangulJungseongAraea_u", test_hangulJungseongAraea_u),
        ("test_hangulJungseongE", test_hangulJungseongE),
        ("test_hangulJungseongEo", test_hangulJungseongEo),
        ("test_hangulJungseongEo_eu", test_hangulJungseongEo_eu),
        ("test_hangulJungseongEo_o", test_hangulJungseongEo_o),
        ("test_hangulJungseongEo_u", test_hangulJungseongEo_u),
        ("test_hangulJungseongEu", test_hangulJungseongEu),
        ("test_hangulJungseongEu_eu", test_hangulJungseongEu_eu),
        ("test_hangulJungseongEu_u", test_hangulJungseongEu_u),
        ("test_hangulJungseongFiller", test_hangulJungseongFiller),
        ("test_hangulJungseongI", test_hangulJungseongI),
        ("test_hangulJungseongI_a", test_hangulJungseongI_a),
        ("test_hangulJungseongI_araea", test_hangulJungseongI_araea),
        ("test_hangulJungseongI_eu", test_hangulJungseongI_eu),
        ("test_hangulJungseongI_o", test_hangulJungseongI_o),
        ("test_hangulJungseongI_u", test_hangulJungseongI_u),
        ("test_hangulJungseongI_ya", test_hangulJungseongI_ya),
        ("test_hangulJungseongO", test_hangulJungseongO),
        ("test_hangulJungseongO_e", test_hangulJungseongO_e),
        ("test_hangulJungseongO_eo", test_hangulJungseongO_eo),
        ("test_hangulJungseongO_o", test_hangulJungseongO_o),
        ("test_hangulJungseongO_u", test_hangulJungseongO_u),
        ("test_hangulJungseongO_ya", test_hangulJungseongO_ya),
        ("test_hangulJungseongO_yae", test_hangulJungseongO_yae),
        ("test_hangulJungseongO_ye", test_hangulJungseongO_ye),
        ("test_hangulJungseongOe", test_hangulJungseongOe),
        ("test_hangulJungseongSsangaraea", test_hangulJungseongSsangaraea),
        ("test_hangulJungseongU", test_hangulJungseongU),
        ("test_hangulJungseongU_a", test_hangulJungseongU_a),
        ("test_hangulJungseongU_ae", test_hangulJungseongU_ae),
        ("test_hangulJungseongU_eo_eu", test_hangulJungseongU_eo_eu),
        ("test_hangulJungseongU_u", test_hangulJungseongU_u),
        ("test_hangulJungseongU_ye", test_hangulJungseongU_ye),
        ("test_hangulJungseongWa", test_hangulJungseongWa),
        ("test_hangulJungseongWae", test_hangulJungseongWae),
        ("test_hangulJungseongWe", test_hangulJungseongWe),
        ("test_hangulJungseongWeo", test_hangulJungseongWeo),
        ("test_hangulJungseongWi", test_hangulJungseongWi),
        ("test_hangulJungseongYa", test_hangulJungseongYa),
        ("test_hangulJungseongYa_o", test_hangulJungseongYa_o),
        ("test_hangulJungseongYa_u", test_hangulJungseongYa_u),
        ("test_hangulJungseongYa_yo", test_hangulJungseongYa_yo),
        ("test_hangulJungseongYae", test_hangulJungseongYae),
        ("test_hangulJungseongYe", test_hangulJungseongYe),
        ("test_hangulJungseongYeo", test_hangulJungseongYeo),
        ("test_hangulJungseongYeo_o", test_hangulJungseongYeo_o),
        ("test_hangulJungseongYeo_u", test_hangulJungseongYeo_u),
        ("test_hangulJungseongYeo_ya", test_hangulJungseongYeo_ya),
        ("test_hangulJungseongYi", test_hangulJungseongYi),
        ("test_hangulJungseongYi_u", test_hangulJungseongYi_u),
        ("test_hangulJungseongYo", test_hangulJungseongYo),
        ("test_hangulJungseongYo_i", test_hangulJungseongYo_i),
        ("test_hangulJungseongYo_o", test_hangulJungseongYo_o),
        ("test_hangulJungseongYo_ya", test_hangulJungseongYo_ya),
        ("test_hangulJungseongYo_yae", test_hangulJungseongYo_yae),
        ("test_hangulJungseongYo_yeo", test_hangulJungseongYo_yeo),
        ("test_hangulJungseongYu", test_hangulJungseongYu),
        ("test_hangulJungseongYu_a", test_hangulJungseongYu_a),
        ("test_hangulJungseongYu_e", test_hangulJungseongYu_e),
        ("test_hangulJungseongYu_eo", test_hangulJungseongYu_eo),
        ("test_hangulJungseongYu_i", test_hangulJungseongYu_i),
        ("test_hangulJungseongYu_u", test_hangulJungseongYu_u),
        ("test_hangulJungseongYu_ye", test_hangulJungseongYu_ye),
        ("test_hangulJungseongYu_yeo", test_hangulJungseongYu_yeo),
    ]
}

extension UnicodeDataHiraganaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataHiraganaTests = [
        ("test_combiningKatakana_hiraganaSemi_voicedSoundMark", test_combiningKatakana_hiraganaSemi_voicedSoundMark),
        ("test_combiningKatakana_hiraganaVoicedSoundMark", test_combiningKatakana_hiraganaVoicedSoundMark),
        ("test_hiraganaDigraphYori", test_hiraganaDigraphYori),
        ("test_hiraganaIterationMark", test_hiraganaIterationMark),
        ("test_hiraganaLetterA", test_hiraganaLetterA),
        ("test_hiraganaLetterBa", test_hiraganaLetterBa),
        ("test_hiraganaLetterBe", test_hiraganaLetterBe),
        ("test_hiraganaLetterBi", test_hiraganaLetterBi),
        ("test_hiraganaLetterBo", test_hiraganaLetterBo),
        ("test_hiraganaLetterBu", test_hiraganaLetterBu),
        ("test_hiraganaLetterDa", test_hiraganaLetterDa),
        ("test_hiraganaLetterDe", test_hiraganaLetterDe),
        ("test_hiraganaLetterDi", test_hiraganaLetterDi),
        ("test_hiraganaLetterDo", test_hiraganaLetterDo),
        ("test_hiraganaLetterDu", test_hiraganaLetterDu),
        ("test_hiraganaLetterE", test_hiraganaLetterE),
        ("test_hiraganaLetterGa", test_hiraganaLetterGa),
        ("test_hiraganaLetterGe", test_hiraganaLetterGe),
        ("test_hiraganaLetterGi", test_hiraganaLetterGi),
        ("test_hiraganaLetterGo", test_hiraganaLetterGo),
        ("test_hiraganaLetterGu", test_hiraganaLetterGu),
        ("test_hiraganaLetterHa", test_hiraganaLetterHa),
        ("test_hiraganaLetterHe", test_hiraganaLetterHe),
        ("test_hiraganaLetterHi", test_hiraganaLetterHi),
        ("test_hiraganaLetterHo", test_hiraganaLetterHo),
        ("test_hiraganaLetterHu", test_hiraganaLetterHu),
        ("test_hiraganaLetterI", test_hiraganaLetterI),
        ("test_hiraganaLetterKa", test_hiraganaLetterKa),
        ("test_hiraganaLetterKe", test_hiraganaLetterKe),
        ("test_hiraganaLetterKi", test_hiraganaLetterKi),
        ("test_hiraganaLetterKo", test_hiraganaLetterKo),
        ("test_hiraganaLetterKu", test_hiraganaLetterKu),
        ("test_hiraganaLetterMa", test_hiraganaLetterMa),
        ("test_hiraganaLetterMe", test_hiraganaLetterMe),
        ("test_hiraganaLetterMi", test_hiraganaLetterMi),
        ("test_hiraganaLetterMo", test_hiraganaLetterMo),
        ("test_hiraganaLetterMu", test_hiraganaLetterMu),
        ("test_hiraganaLetterN", test_hiraganaLetterN),
        ("test_hiraganaLetterNa", test_hiraganaLetterNa),
        ("test_hiraganaLetterNe", test_hiraganaLetterNe),
        ("test_hiraganaLetterNi", test_hiraganaLetterNi),
        ("test_hiraganaLetterNo", test_hiraganaLetterNo),
        ("test_hiraganaLetterNu", test_hiraganaLetterNu),
        ("test_hiraganaLetterO", test_hiraganaLetterO),
        ("test_hiraganaLetterPa", test_hiraganaLetterPa),
        ("test_hiraganaLetterPe", test_hiraganaLetterPe),
        ("test_hiraganaLetterPi", test_hiraganaLetterPi),
        ("test_hiraganaLetterPo", test_hiraganaLetterPo),
        ("test_hiraganaLetterPu", test_hiraganaLetterPu),
        ("test_hiraganaLetterRa", test_hiraganaLetterRa),
        ("test_hiraganaLetterRe", test_hiraganaLetterRe),
        ("test_hiraganaLetterRi", test_hiraganaLetterRi),
        ("test_hiraganaLetterRo", test_hiraganaLetterRo),
        ("test_hiraganaLetterRu", test_hiraganaLetterRu),
        ("test_hiraganaLetterSa", test_hiraganaLetterSa),
        ("test_hiraganaLetterSe", test_hiraganaLetterSe),
        ("test_hiraganaLetterSi", test_hiraganaLetterSi),
        ("test_hiraganaLetterSmallA", test_hiraganaLetterSmallA),
        ("test_hiraganaLetterSmallE", test_hiraganaLetterSmallE),
        ("test_hiraganaLetterSmallI", test_hiraganaLetterSmallI),
        ("test_hiraganaLetterSmallKa", test_hiraganaLetterSmallKa),
        ("test_hiraganaLetterSmallKe", test_hiraganaLetterSmallKe),
        ("test_hiraganaLetterSmallO", test_hiraganaLetterSmallO),
        ("test_hiraganaLetterSmallTu", test_hiraganaLetterSmallTu),
        ("test_hiraganaLetterSmallU", test_hiraganaLetterSmallU),
        ("test_hiraganaLetterSmallWa", test_hiraganaLetterSmallWa),
        ("test_hiraganaLetterSmallYa", test_hiraganaLetterSmallYa),
        ("test_hiraganaLetterSmallYo", test_hiraganaLetterSmallYo),
        ("test_hiraganaLetterSmallYu", test_hiraganaLetterSmallYu),
        ("test_hiraganaLetterSo", test_hiraganaLetterSo),
        ("test_hiraganaLetterSu", test_hiraganaLetterSu),
        ("test_hiraganaLetterTa", test_hiraganaLetterTa),
        ("test_hiraganaLetterTe", test_hiraganaLetterTe),
        ("test_hiraganaLetterTi", test_hiraganaLetterTi),
        ("test_hiraganaLetterTo", test_hiraganaLetterTo),
        ("test_hiraganaLetterTu", test_hiraganaLetterTu),
        ("test_hiraganaLetterU", test_hiraganaLetterU),
        ("test_hiraganaLetterVu", test_hiraganaLetterVu),
        ("test_hiraganaLetterWa", test_hiraganaLetterWa),
        ("test_hiraganaLetterWe", test_hiraganaLetterWe),
        ("test_hiraganaLetterWi", test_hiraganaLetterWi),
        ("test_hiraganaLetterWo", test_hiraganaLetterWo),
        ("test_hiraganaLetterYa", test_hiraganaLetterYa),
        ("test_hiraganaLetterYo", test_hiraganaLetterYo),
        ("test_hiraganaLetterYu", test_hiraganaLetterYu),
        ("test_hiraganaLetterZa", test_hiraganaLetterZa),
        ("test_hiraganaLetterZe", test_hiraganaLetterZe),
        ("test_hiraganaLetterZi", test_hiraganaLetterZi),
        ("test_hiraganaLetterZo", test_hiraganaLetterZo),
        ("test_hiraganaLetterZu", test_hiraganaLetterZu),
        ("test_hiraganaVoicedIterationMark", test_hiraganaVoicedIterationMark),
        ("test_katakana_hiraganaSemi_voicedSoundMark", test_katakana_hiraganaSemi_voicedSoundMark),
        ("test_katakana_hiraganaVoicedSoundMark", test_katakana_hiraganaVoicedSoundMark),
    ]
}

extension UnicodeDataKatakanaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataKatakanaTests = [
        ("test_katakana_hiraganaDoubleHyphen", test_katakana_hiraganaDoubleHyphen),
        ("test_katakana_hiraganaProlongedSoundMark", test_katakana_hiraganaProlongedSoundMark),
        ("test_katakanaDigraphKoto", test_katakanaDigraphKoto),
        ("test_katakanaIterationMark", test_katakanaIterationMark),
        ("test_katakanaLetterA", test_katakanaLetterA),
        ("test_katakanaLetterBa", test_katakanaLetterBa),
        ("test_katakanaLetterBe", test_katakanaLetterBe),
        ("test_katakanaLetterBi", test_katakanaLetterBi),
        ("test_katakanaLetterBo", test_katakanaLetterBo),
        ("test_katakanaLetterBu", test_katakanaLetterBu),
        ("test_katakanaLetterDa", test_katakanaLetterDa),
        ("test_katakanaLetterDe", test_katakanaLetterDe),
        ("test_katakanaLetterDi", test_katakanaLetterDi),
        ("test_katakanaLetterDo", test_katakanaLetterDo),
        ("test_katakanaLetterDu", test_katakanaLetterDu),
        ("test_katakanaLetterE", test_katakanaLetterE),
        ("test_katakanaLetterGa", test_katakanaLetterGa),
        ("test_katakanaLetterGe", test_katakanaLetterGe),
        ("test_katakanaLetterGi", test_katakanaLetterGi),
        ("test_katakanaLetterGo", test_katakanaLetterGo),
        ("test_katakanaLetterGu", test_katakanaLetterGu),
        ("test_katakanaLetterHa", test_katakanaLetterHa),
        ("test_katakanaLetterHe", test_katakanaLetterHe),
        ("test_katakanaLetterHi", test_katakanaLetterHi),
        ("test_katakanaLetterHo", test_katakanaLetterHo),
        ("test_katakanaLetterHu", test_katakanaLetterHu),
        ("test_katakanaLetterI", test_katakanaLetterI),
        ("test_katakanaLetterKa", test_katakanaLetterKa),
        ("test_katakanaLetterKe", test_katakanaLetterKe),
        ("test_katakanaLetterKi", test_katakanaLetterKi),
        ("test_katakanaLetterKo", test_katakanaLetterKo),
        ("test_katakanaLetterKu", test_katakanaLetterKu),
        ("test_katakanaLetterMa", test_katakanaLetterMa),
        ("test_katakanaLetterMe", test_katakanaLetterMe),
        ("test_katakanaLetterMi", test_katakanaLetterMi),
        ("test_katakanaLetterMo", test_katakanaLetterMo),
        ("test_katakanaLetterMu", test_katakanaLetterMu),
        ("test_katakanaLetterN", test_katakanaLetterN),
        ("test_katakanaLetterNa", test_katakanaLetterNa),
        ("test_katakanaLetterNe", test_katakanaLetterNe),
        ("test_katakanaLetterNi", test_katakanaLetterNi),
        ("test_katakanaLetterNo", test_katakanaLetterNo),
        ("test_katakanaLetterNu", test_katakanaLetterNu),
        ("test_katakanaLetterO", test_katakanaLetterO),
        ("test_katakanaLetterPa", test_katakanaLetterPa),
        ("test_katakanaLetterPe", test_katakanaLetterPe),
        ("test_katakanaLetterPi", test_katakanaLetterPi),
        ("test_katakanaLetterPo", test_katakanaLetterPo),
        ("test_katakanaLetterPu", test_katakanaLetterPu),
        ("test_katakanaLetterRa", test_katakanaLetterRa),
        ("test_katakanaLetterRe", test_katakanaLetterRe),
        ("test_katakanaLetterRi", test_katakanaLetterRi),
        ("test_katakanaLetterRo", test_katakanaLetterRo),
        ("test_katakanaLetterRu", test_katakanaLetterRu),
        ("test_katakanaLetterSa", test_katakanaLetterSa),
        ("test_katakanaLetterSe", test_katakanaLetterSe),
        ("test_katakanaLetterSi", test_katakanaLetterSi),
        ("test_katakanaLetterSmallA", test_katakanaLetterSmallA),
        ("test_katakanaLetterSmallE", test_katakanaLetterSmallE),
        ("test_katakanaLetterSmallI", test_katakanaLetterSmallI),
        ("test_katakanaLetterSmallKa", test_katakanaLetterSmallKa),
        ("test_katakanaLetterSmallKe", test_katakanaLetterSmallKe),
        ("test_katakanaLetterSmallO", test_katakanaLetterSmallO),
        ("test_katakanaLetterSmallTu", test_katakanaLetterSmallTu),
        ("test_katakanaLetterSmallU", test_katakanaLetterSmallU),
        ("test_katakanaLetterSmallWa", test_katakanaLetterSmallWa),
        ("test_katakanaLetterSmallYa", test_katakanaLetterSmallYa),
        ("test_katakanaLetterSmallYo", test_katakanaLetterSmallYo),
        ("test_katakanaLetterSmallYu", test_katakanaLetterSmallYu),
        ("test_katakanaLetterSo", test_katakanaLetterSo),
        ("test_katakanaLetterSu", test_katakanaLetterSu),
        ("test_katakanaLetterTa", test_katakanaLetterTa),
        ("test_katakanaLetterTe", test_katakanaLetterTe),
        ("test_katakanaLetterTi", test_katakanaLetterTi),
        ("test_katakanaLetterTo", test_katakanaLetterTo),
        ("test_katakanaLetterTu", test_katakanaLetterTu),
        ("test_katakanaLetterU", test_katakanaLetterU),
        ("test_katakanaLetterVa", test_katakanaLetterVa),
        ("test_katakanaLetterVe", test_katakanaLetterVe),
        ("test_katakanaLetterVi", test_katakanaLetterVi),
        ("test_katakanaLetterVo", test_katakanaLetterVo),
        ("test_katakanaLetterVu", test_katakanaLetterVu),
        ("test_katakanaLetterWa", test_katakanaLetterWa),
        ("test_katakanaLetterWe", test_katakanaLetterWe),
        ("test_katakanaLetterWi", test_katakanaLetterWi),
        ("test_katakanaLetterWo", test_katakanaLetterWo),
        ("test_katakanaLetterYa", test_katakanaLetterYa),
        ("test_katakanaLetterYo", test_katakanaLetterYo),
        ("test_katakanaLetterYu", test_katakanaLetterYu),
        ("test_katakanaLetterZa", test_katakanaLetterZa),
        ("test_katakanaLetterZe", test_katakanaLetterZe),
        ("test_katakanaLetterZi", test_katakanaLetterZi),
        ("test_katakanaLetterZo", test_katakanaLetterZo),
        ("test_katakanaLetterZu", test_katakanaLetterZu),
        ("test_katakanaMiddleDot", test_katakanaMiddleDot),
        ("test_katakanaVoicedIterationMark", test_katakanaVoicedIterationMark),
    ]
}

extension UnicodeDataLatin1SupplementTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataLatin1SupplementTests = [
        ("test_acuteAccent", test_acuteAccent),
        ("test_brokenBar", test_brokenBar),
        ("test_cedilla", test_cedilla),
        ("test_centSign", test_centSign),
        ("test_copyrightSign", test_copyrightSign),
        ("test_currencySign", test_currencySign),
        ("test_degreeSign", test_degreeSign),
        ("test_diaeresis", test_diaeresis),
        ("test_divisionSign", test_divisionSign),
        ("test_feminineOrdinalIndicator", test_feminineOrdinalIndicator),
        ("test_invertedExclamationMark", test_invertedExclamationMark),
        ("test_invertedQuestionMark", test_invertedQuestionMark),
        ("test_latinCapitalLetterAe", test_latinCapitalLetterAe),
        ("test_latinCapitalLetterAWithAcute", test_latinCapitalLetterAWithAcute),
        ("test_latinCapitalLetterAWithCircumflex", test_latinCapitalLetterAWithCircumflex),
        ("test_latinCapitalLetterAWithDiaeresis", test_latinCapitalLetterAWithDiaeresis),
        ("test_latinCapitalLetterAWithGrave", test_latinCapitalLetterAWithGrave),
        ("test_latinCapitalLetterAWithRingAbove", test_latinCapitalLetterAWithRingAbove),
        ("test_latinCapitalLetterAWithTilde", test_latinCapitalLetterAWithTilde),
        ("test_latinCapitalLetterCWithCedilla", test_latinCapitalLetterCWithCedilla),
        ("test_latinCapitalLetterEth", test_latinCapitalLetterEth),
        ("test_latinCapitalLetterEWithAcute", test_latinCapitalLetterEWithAcute),
        ("test_latinCapitalLetterEWithCircumflex", test_latinCapitalLetterEWithCircumflex),
        ("test_latinCapitalLetterEWithDiaeresis", test_latinCapitalLetterEWithDiaeresis),
        ("test_latinCapitalLetterEWithGrave", test_latinCapitalLetterEWithGrave),
        ("test_latinCapitalLetterIWithAcute", test_latinCapitalLetterIWithAcute),
        ("test_latinCapitalLetterIWithCircumflex", test_latinCapitalLetterIWithCircumflex),
        ("test_latinCapitalLetterIWithDiaeresis", test_latinCapitalLetterIWithDiaeresis),
        ("test_latinCapitalLetterIWithGrave", test_latinCapitalLetterIWithGrave),
        ("test_latinCapitalLetterNWithTilde", test_latinCapitalLetterNWithTilde),
        ("test_latinCapitalLetterOWithAcute", test_latinCapitalLetterOWithAcute),
        ("test_latinCapitalLetterOWithCircumflex", test_latinCapitalLetterOWithCircumflex),
        ("test_latinCapitalLetterOWithDiaeresis", test_latinCapitalLetterOWithDiaeresis),
        ("test_latinCapitalLetterOWithGrave", test_latinCapitalLetterOWithGrave),
        ("test_latinCapitalLetterOWithStroke", test_latinCapitalLetterOWithStroke),
        ("test_latinCapitalLetterOWithTilde", test_latinCapitalLetterOWithTilde),
        ("test_latinCapitalLetterThorn", test_latinCapitalLetterThorn),
        ("test_latinCapitalLetterUWithAcute", test_latinCapitalLetterUWithAcute),
        ("test_latinCapitalLetterUWithCircumflex", test_latinCapitalLetterUWithCircumflex),
        ("test_latinCapitalLetterUWithDiaeresis", test_latinCapitalLetterUWithDiaeresis),
        ("test_latinCapitalLetterUWithGrave", test_latinCapitalLetterUWithGrave),
        ("test_latinCapitalLetterYWithAcute", test_latinCapitalLetterYWithAcute),
        ("test_latinSmallLetterAe", test_latinSmallLetterAe),
        ("test_latinSmallLetterAWithAcute", test_latinSmallLetterAWithAcute),
        ("test_latinSmallLetterAWithCircumflex", test_latinSmallLetterAWithCircumflex),
        ("test_latinSmallLetterAWithDiaeresis", test_latinSmallLetterAWithDiaeresis),
        ("test_latinSmallLetterAWithGrave", test_latinSmallLetterAWithGrave),
        ("test_latinSmallLetterAWithRingAbove", test_latinSmallLetterAWithRingAbove),
        ("test_latinSmallLetterAWithTilde", test_latinSmallLetterAWithTilde),
        ("test_latinSmallLetterCWithCedilla", test_latinSmallLetterCWithCedilla),
        ("test_latinSmallLetterEth", test_latinSmallLetterEth),
        ("test_latinSmallLetterEWithAcute", test_latinSmallLetterEWithAcute),
        ("test_latinSmallLetterEWithCircumflex", test_latinSmallLetterEWithCircumflex),
        ("test_latinSmallLetterEWithDiaeresis", test_latinSmallLetterEWithDiaeresis),
        ("test_latinSmallLetterEWithGrave", test_latinSmallLetterEWithGrave),
        ("test_latinSmallLetterIWithAcute", test_latinSmallLetterIWithAcute),
        ("test_latinSmallLetterIWithCircumflex", test_latinSmallLetterIWithCircumflex),
        ("test_latinSmallLetterIWithDiaeresis", test_latinSmallLetterIWithDiaeresis),
        ("test_latinSmallLetterIWithGrave", test_latinSmallLetterIWithGrave),
        ("test_latinSmallLetterNWithTilde", test_latinSmallLetterNWithTilde),
        ("test_latinSmallLetterOWithAcute", test_latinSmallLetterOWithAcute),
        ("test_latinSmallLetterOWithCircumflex", test_latinSmallLetterOWithCircumflex),
        ("test_latinSmallLetterOWithDiaeresis", test_latinSmallLetterOWithDiaeresis),
        ("test_latinSmallLetterOWithGrave", test_latinSmallLetterOWithGrave),
        ("test_latinSmallLetterOWithStroke", test_latinSmallLetterOWithStroke),
        ("test_latinSmallLetterOWithTilde", test_latinSmallLetterOWithTilde),
        ("test_latinSmallLetterSharpS", test_latinSmallLetterSharpS),
        ("test_latinSmallLetterThorn", test_latinSmallLetterThorn),
        ("test_latinSmallLetterUWithAcute", test_latinSmallLetterUWithAcute),
        ("test_latinSmallLetterUWithCircumflex", test_latinSmallLetterUWithCircumflex),
        ("test_latinSmallLetterUWithDiaeresis", test_latinSmallLetterUWithDiaeresis),
        ("test_latinSmallLetterUWithGrave", test_latinSmallLetterUWithGrave),
        ("test_latinSmallLetterYWithAcute", test_latinSmallLetterYWithAcute),
        ("test_latinSmallLetterYWithDiaeresis", test_latinSmallLetterYWithDiaeresis),
        ("test_left_pointingDoubleAngleQuotationMark", test_left_pointingDoubleAngleQuotationMark),
        ("test_macron", test_macron),
        ("test_masculineOrdinalIndicator", test_masculineOrdinalIndicator),
        ("test_microSign", test_microSign),
        ("test_middleDot", test_middleDot),
        ("test_multiplicationSign", test_multiplicationSign),
        ("test_no_breakSpace", test_no_breakSpace),
        ("test_notSign", test_notSign),
        ("test_pilcrowSign", test_pilcrowSign),
        ("test_plus_minusSign", test_plus_minusSign),
        ("test_poundSign", test_poundSign),
        ("test_registeredSign", test_registeredSign),
        ("test_right_pointingDoubleAngleQuotationMark", test_right_pointingDoubleAngleQuotationMark),
        ("test_sectionSign", test_sectionSign),
        ("test_softHyphen", test_softHyphen),
        ("test_superscriptOne", test_superscriptOne),
        ("test_superscriptThree", test_superscriptThree),
        ("test_superscriptTwo", test_superscriptTwo),
        ("test_vulgarFractionOneHalf", test_vulgarFractionOneHalf),
        ("test_vulgarFractionOneQuarter", test_vulgarFractionOneQuarter),
        ("test_vulgarFractionThreeQuarters", test_vulgarFractionThreeQuarters),
        ("test_yenSign", test_yenSign),
    ]
}

extension UnicodeDataLatinExtendedATests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataLatinExtendedATests = [
        ("test_latinCapitalLetterAWithBreve", test_latinCapitalLetterAWithBreve),
        ("test_latinCapitalLetterAWithMacron", test_latinCapitalLetterAWithMacron),
        ("test_latinCapitalLetterAWithOgonek", test_latinCapitalLetterAWithOgonek),
        ("test_latinCapitalLetterCWithAcute", test_latinCapitalLetterCWithAcute),
        ("test_latinCapitalLetterCWithCaron", test_latinCapitalLetterCWithCaron),
        ("test_latinCapitalLetterCWithCircumflex", test_latinCapitalLetterCWithCircumflex),
        ("test_latinCapitalLetterCWithDotAbove", test_latinCapitalLetterCWithDotAbove),
        ("test_latinCapitalLetterDWithCaron", test_latinCapitalLetterDWithCaron),
        ("test_latinCapitalLetterDWithStroke", test_latinCapitalLetterDWithStroke),
        ("test_latinCapitalLetterEng", test_latinCapitalLetterEng),
        ("test_latinCapitalLetterEWithBreve", test_latinCapitalLetterEWithBreve),
        ("test_latinCapitalLetterEWithCaron", test_latinCapitalLetterEWithCaron),
        ("test_latinCapitalLetterEWithDotAbove", test_latinCapitalLetterEWithDotAbove),
        ("test_latinCapitalLetterEWithMacron", test_latinCapitalLetterEWithMacron),
        ("test_latinCapitalLetterEWithOgonek", test_latinCapitalLetterEWithOgonek),
        ("test_latinCapitalLetterGWithBreve", test_latinCapitalLetterGWithBreve),
        ("test_latinCapitalLetterGWithCedilla", test_latinCapitalLetterGWithCedilla),
        ("test_latinCapitalLetterGWithCircumflex", test_latinCapitalLetterGWithCircumflex),
        ("test_latinCapitalLetterGWithDotAbove", test_latinCapitalLetterGWithDotAbove),
        ("test_latinCapitalLetterHWithCircumflex", test_latinCapitalLetterHWithCircumflex),
        ("test_latinCapitalLetterHWithStroke", test_latinCapitalLetterHWithStroke),
        ("test_latinCapitalLetterIWithBreve", test_latinCapitalLetterIWithBreve),
        ("test_latinCapitalLetterIWithDotAbove", test_latinCapitalLetterIWithDotAbove),
        ("test_latinCapitalLetterIWithMacron", test_latinCapitalLetterIWithMacron),
        ("test_latinCapitalLetterIWithOgonek", test_latinCapitalLetterIWithOgonek),
        ("test_latinCapitalLetterIWithTilde", test_latinCapitalLetterIWithTilde),
        ("test_latinCapitalLetterJWithCircumflex", test_latinCapitalLetterJWithCircumflex),
        ("test_latinCapitalLetterKWithCedilla", test_latinCapitalLetterKWithCedilla),
        ("test_latinCapitalLetterLWithAcute", test_latinCapitalLetterLWithAcute),
        ("test_latinCapitalLetterLWithCaron", test_latinCapitalLetterLWithCaron),
        ("test_latinCapitalLetterLWithCedilla", test_latinCapitalLetterLWithCedilla),
        ("test_latinCapitalLetterLWithMiddleDot", test_latinCapitalLetterLWithMiddleDot),
        ("test_latinCapitalLetterLWithStroke", test_latinCapitalLetterLWithStroke),
        ("test_latinCapitalLetterNWithAcute", test_latinCapitalLetterNWithAcute),
        ("test_latinCapitalLetterNWithCaron", test_latinCapitalLetterNWithCaron),
        ("test_latinCapitalLetterNWithCedilla", test_latinCapitalLetterNWithCedilla),
        ("test_latinCapitalLetterOWithBreve", test_latinCapitalLetterOWithBreve),
        ("test_latinCapitalLetterOWithDoubleAcute", test_latinCapitalLetterOWithDoubleAcute),
        ("test_latinCapitalLetterOWithMacron", test_latinCapitalLetterOWithMacron),
        ("test_latinCapitalLetterRWithAcute", test_latinCapitalLetterRWithAcute),
        ("test_latinCapitalLetterRWithCaron", test_latinCapitalLetterRWithCaron),
        ("test_latinCapitalLetterRWithCedilla", test_latinCapitalLetterRWithCedilla),
        ("test_latinCapitalLetterSWithAcute", test_latinCapitalLetterSWithAcute),
        ("test_latinCapitalLetterSWithCaron", test_latinCapitalLetterSWithCaron),
        ("test_latinCapitalLetterSWithCedilla", test_latinCapitalLetterSWithCedilla),
        ("test_latinCapitalLetterSWithCircumflex", test_latinCapitalLetterSWithCircumflex),
        ("test_latinCapitalLetterTWithCaron", test_latinCapitalLetterTWithCaron),
        ("test_latinCapitalLetterTWithCedilla", test_latinCapitalLetterTWithCedilla),
        ("test_latinCapitalLetterTWithStroke", test_latinCapitalLetterTWithStroke),
        ("test_latinCapitalLetterUWithBreve", test_latinCapitalLetterUWithBreve),
        ("test_latinCapitalLetterUWithDoubleAcute", test_latinCapitalLetterUWithDoubleAcute),
        ("test_latinCapitalLetterUWithMacron", test_latinCapitalLetterUWithMacron),
        ("test_latinCapitalLetterUWithOgonek", test_latinCapitalLetterUWithOgonek),
        ("test_latinCapitalLetterUWithRingAbove", test_latinCapitalLetterUWithRingAbove),
        ("test_latinCapitalLetterUWithTilde", test_latinCapitalLetterUWithTilde),
        ("test_latinCapitalLetterWWithCircumflex", test_latinCapitalLetterWWithCircumflex),
        ("test_latinCapitalLetterYWithCircumflex", test_latinCapitalLetterYWithCircumflex),
        ("test_latinCapitalLetterYWithDiaeresis", test_latinCapitalLetterYWithDiaeresis),
        ("test_latinCapitalLetterZWithAcute", test_latinCapitalLetterZWithAcute),
        ("test_latinCapitalLetterZWithCaron", test_latinCapitalLetterZWithCaron),
        ("test_latinCapitalLetterZWithDotAbove", test_latinCapitalLetterZWithDotAbove),
        ("test_latinCapitalLigatureIj", test_latinCapitalLigatureIj),
        ("test_latinCapitalLigatureOe", test_latinCapitalLigatureOe),
        ("test_latinSmallLetterAWithBreve", test_latinSmallLetterAWithBreve),
        ("test_latinSmallLetterAWithMacron", test_latinSmallLetterAWithMacron),
        ("test_latinSmallLetterAWithOgonek", test_latinSmallLetterAWithOgonek),
        ("test_latinSmallLetterCWithAcute", test_latinSmallLetterCWithAcute),
        ("test_latinSmallLetterCWithCaron", test_latinSmallLetterCWithCaron),
        ("test_latinSmallLetterCWithCircumflex", test_latinSmallLetterCWithCircumflex),
        ("test_latinSmallLetterCWithDotAbove", test_latinSmallLetterCWithDotAbove),
        ("test_latinSmallLetterDotlessI", test_latinSmallLetterDotlessI),
        ("test_latinSmallLetterDWithCaron", test_latinSmallLetterDWithCaron),
        ("test_latinSmallLetterDWithStroke", test_latinSmallLetterDWithStroke),
        ("test_latinSmallLetterEng", test_latinSmallLetterEng),
        ("test_latinSmallLetterEWithBreve", test_latinSmallLetterEWithBreve),
        ("test_latinSmallLetterEWithCaron", test_latinSmallLetterEWithCaron),
        ("test_latinSmallLetterEWithDotAbove", test_latinSmallLetterEWithDotAbove),
        ("test_latinSmallLetterEWithMacron", test_latinSmallLetterEWithMacron),
        ("test_latinSmallLetterEWithOgonek", test_latinSmallLetterEWithOgonek),
        ("test_latinSmallLetterGWithBreve", test_latinSmallLetterGWithBreve),
        ("test_latinSmallLetterGWithCedilla", test_latinSmallLetterGWithCedilla),
        ("test_latinSmallLetterGWithCircumflex", test_latinSmallLetterGWithCircumflex),
        ("test_latinSmallLetterGWithDotAbove", test_latinSmallLetterGWithDotAbove),
        ("test_latinSmallLetterHWithCircumflex", test_latinSmallLetterHWithCircumflex),
        ("test_latinSmallLetterHWithStroke", test_latinSmallLetterHWithStroke),
        ("test_latinSmallLetterIWithBreve", test_latinSmallLetterIWithBreve),
        ("test_latinSmallLetterIWithMacron", test_latinSmallLetterIWithMacron),
        ("test_latinSmallLetterIWithOgonek", test_latinSmallLetterIWithOgonek),
        ("test_latinSmallLetterIWithTilde", test_latinSmallLetterIWithTilde),
        ("test_latinSmallLetterJWithCircumflex", test_latinSmallLetterJWithCircumflex),
        ("test_latinSmallLetterKra", test_latinSmallLetterKra),
        ("test_latinSmallLetterKWithCedilla", test_latinSmallLetterKWithCedilla),
        ("test_latinSmallLetterLongS", test_latinSmallLetterLongS),
        ("test_latinSmallLetterLWithAcute", test_latinSmallLetterLWithAcute),
        ("test_latinSmallLetterLWithCaron", test_latinSmallLetterLWithCaron),
        ("test_latinSmallLetterLWithCedilla", test_latinSmallLetterLWithCedilla),
        ("test_latinSmallLetterLWithMiddleDot", test_latinSmallLetterLWithMiddleDot),
        ("test_latinSmallLetterLWithStroke", test_latinSmallLetterLWithStroke),
        ("test_latinSmallLetterNPrecededByApostrophe", test_latinSmallLetterNPrecededByApostrophe),
        ("test_latinSmallLetterNWithAcute", test_latinSmallLetterNWithAcute),
        ("test_latinSmallLetterNWithCaron", test_latinSmallLetterNWithCaron),
        ("test_latinSmallLetterNWithCedilla", test_latinSmallLetterNWithCedilla),
        ("test_latinSmallLetterOWithBreve", test_latinSmallLetterOWithBreve),
        ("test_latinSmallLetterOWithDoubleAcute", test_latinSmallLetterOWithDoubleAcute),
        ("test_latinSmallLetterOWithMacron", test_latinSmallLetterOWithMacron),
        ("test_latinSmallLetterRWithAcute", test_latinSmallLetterRWithAcute),
        ("test_latinSmallLetterRWithCaron", test_latinSmallLetterRWithCaron),
        ("test_latinSmallLetterRWithCedilla", test_latinSmallLetterRWithCedilla),
        ("test_latinSmallLetterSWithAcute", test_latinSmallLetterSWithAcute),
        ("test_latinSmallLetterSWithCaron", test_latinSmallLetterSWithCaron),
        ("test_latinSmallLetterSWithCedilla", test_latinSmallLetterSWithCedilla),
        ("test_latinSmallLetterSWithCircumflex", test_latinSmallLetterSWithCircumflex),
        ("test_latinSmallLetterTWithCaron", test_latinSmallLetterTWithCaron),
        ("test_latinSmallLetterTWithCedilla", test_latinSmallLetterTWithCedilla),
        ("test_latinSmallLetterTWithStroke", test_latinSmallLetterTWithStroke),
        ("test_latinSmallLetterUWithBreve", test_latinSmallLetterUWithBreve),
        ("test_latinSmallLetterUWithDoubleAcute", test_latinSmallLetterUWithDoubleAcute),
        ("test_latinSmallLetterUWithMacron", test_latinSmallLetterUWithMacron),
        ("test_latinSmallLetterUWithOgonek", test_latinSmallLetterUWithOgonek),
        ("test_latinSmallLetterUWithRingAbove", test_latinSmallLetterUWithRingAbove),
        ("test_latinSmallLetterUWithTilde", test_latinSmallLetterUWithTilde),
        ("test_latinSmallLetterWWithCircumflex", test_latinSmallLetterWWithCircumflex),
        ("test_latinSmallLetterYWithCircumflex", test_latinSmallLetterYWithCircumflex),
        ("test_latinSmallLetterZWithAcute", test_latinSmallLetterZWithAcute),
        ("test_latinSmallLetterZWithCaron", test_latinSmallLetterZWithCaron),
        ("test_latinSmallLetterZWithDotAbove", test_latinSmallLetterZWithDotAbove),
        ("test_latinSmallLigatureIj", test_latinSmallLigatureIj),
        ("test_latinSmallLigatureOe", test_latinSmallLigatureOe),
    ]
}

extension UnicodeDataMathematicalOperatorsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataMathematicalOperatorsTests = [
        ("test_allEqualTo", test_allEqualTo),
        ("test_almostEqualOrEqualTo", test_almostEqualOrEqualTo),
        ("test_almostEqualTo", test_almostEqualTo),
        ("test_angle", test_angle),
        ("test_anticlockwiseContourIntegral", test_anticlockwiseContourIntegral),
        ("test_approachesTheLimit", test_approachesTheLimit),
        ("test_approximatelyButNotActuallyEqualTo", test_approximatelyButNotActuallyEqualTo),
        ("test_approximatelyEqualTo", test_approximatelyEqualTo),
        ("test_approximatelyEqualToOrTheImageOf", test_approximatelyEqualToOrTheImageOf),
        ("test_assertion", test_assertion),
        ("test_asteriskOperator", test_asteriskOperator),
        ("test_asymptoticallyEqualTo", test_asymptoticallyEqualTo),
        ("test_because", test_because),
        ("test_between", test_between),
        ("test_bowtie", test_bowtie),
        ("test_bulletOperator", test_bulletOperator),
        ("test_circledAsteriskOperator", test_circledAsteriskOperator),
        ("test_circledDash", test_circledDash),
        ("test_circledDivisionSlash", test_circledDivisionSlash),
        ("test_circledDotOperator", test_circledDotOperator),
        ("test_circledEquals", test_circledEquals),
        ("test_circledMinus", test_circledMinus),
        ("test_circledPlus", test_circledPlus),
        ("test_circledRingOperator", test_circledRingOperator),
        ("test_circledTimes", test_circledTimes),
        ("test_clockwiseContourIntegral", test_clockwiseContourIntegral),
        ("test_clockwiseIntegral", test_clockwiseIntegral),
        ("test_colonEquals", test_colonEquals),
        ("test_complement", test_complement),
        ("test_containsAsMember", test_containsAsMember),
        ("test_containsAsNormalSubgroup", test_containsAsNormalSubgroup),
        ("test_containsAsNormalSubgroupOrEqualTo", test_containsAsNormalSubgroupOrEqualTo),
        ("test_containsWithLongHorizontalStroke", test_containsWithLongHorizontalStroke),
        ("test_containsWithOverbar", test_containsWithOverbar),
        ("test_containsWithVerticalBarAtEndOfHorizontalStroke", test_containsWithVerticalBarAtEndOfHorizontalStroke),
        ("test_contourIntegral", test_contourIntegral),
        ("test_correspondsTo", test_correspondsTo),
        ("test_cubeRoot", test_cubeRoot),
        ("test_curlyLogicalAnd", test_curlyLogicalAnd),
        ("test_curlyLogicalOr", test_curlyLogicalOr),
        ("test_deltaEqualTo", test_deltaEqualTo),
        ("test_diamondOperator", test_diamondOperator),
        ("test_differenceBetween", test_differenceBetween),
        ("test_divides", test_divides),
        ("test_divisionSlash", test_divisionSlash),
        ("test_divisionTimes", test_divisionTimes),
        ("test_doesNotContainAsMember", test_doesNotContainAsMember),
        ("test_doesNotContainAsNormalSubgroup", test_doesNotContainAsNormalSubgroup),
        ("test_doesNotContainAsNormalSubgroupOrEqual", test_doesNotContainAsNormalSubgroupOrEqual),
        ("test_doesNotDivide", test_doesNotDivide),
        ("test_doesNotForce", test_doesNotForce),
        ("test_doesNotPrecede", test_doesNotPrecede),
        ("test_doesNotPrecedeOrEqual", test_doesNotPrecedeOrEqual),
        ("test_doesNotProve", test_doesNotProve),
        ("test_doesNotSucceed", test_doesNotSucceed),
        ("test_doesNotSucceedOrEqual", test_doesNotSucceedOrEqual),
        ("test_dotMinus", test_dotMinus),
        ("test_dotOperator", test_dotOperator),
        ("test_dotPlus", test_dotPlus),
        ("test_doubleIntegral", test_doubleIntegral),
        ("test_doubleIntersection", test_doubleIntersection),
        ("test_doubleSubset", test_doubleSubset),
        ("test_doubleSuperset", test_doubleSuperset),
        ("test_doubleUnion", test_doubleUnion),
        ("test_doubleVerticalBarDoubleRightTurnstile", test_doubleVerticalBarDoubleRightTurnstile),
        ("test_downRightDiagonalEllipsis", test_downRightDiagonalEllipsis),
        ("test_downTack", test_downTack),
        ("test_elementOf", test_elementOf),
        ("test_elementOfWithDotAbove", test_elementOfWithDotAbove),
        ("test_elementOfWithLongHorizontalStroke", test_elementOfWithLongHorizontalStroke),
        ("test_elementOfWithOverbar", test_elementOfWithOverbar),
        ("test_elementOfWithTwoHorizontalStrokes", test_elementOfWithTwoHorizontalStrokes),
        ("test_elementOfWithUnderbar", test_elementOfWithUnderbar),
        ("test_elementOfWithVerticalBarAtEndOfHorizontalStroke", test_elementOfWithVerticalBarAtEndOfHorizontalStroke),
        ("test_emptySet", test_emptySet),
        ("test_endOfProof", test_endOfProof),
        ("test_equalAndParallelTo", test_equalAndParallelTo),
        ("test_equalsColon", test_equalsColon),
        ("test_equalToByDefinition", test_equalToByDefinition),
        ("test_equalToOrGreater_than", test_equalToOrGreater_than),
        ("test_equalToOrLess_than", test_equalToOrLess_than),
        ("test_equalToOrPrecedes", test_equalToOrPrecedes),
        ("test_equalToOrSucceeds", test_equalToOrSucceeds),
        ("test_equiangularTo", test_equiangularTo),
        ("test_equivalentTo", test_equivalentTo),
        ("test_estimates", test_estimates),
        ("test_excess", test_excess),
        ("test_forAll", test_forAll),
        ("test_forces", test_forces),
        ("test_fourthRoot", test_fourthRoot),
        ("test_geometricallyEqualTo", test_geometricallyEqualTo),
        ("test_geometricallyEquivalentTo", test_geometricallyEquivalentTo),
        ("test_geometricProportion", test_geometricProportion),
        ("test_greater_thanButNotEqualTo", test_greater_thanButNotEqualTo),
        ("test_greater_thanButNotEquivalentTo", test_greater_thanButNotEquivalentTo),
        ("test_greater_thanEqualToOrLess_than", test_greater_thanEqualToOrLess_than),
        ("test_greater_thanOrEqualTo", test_greater_thanOrEqualTo),
        ("test_greater_thanOrEquivalentTo", test_greater_thanOrEquivalentTo),
        ("test_greater_thanOrLess_than", test_greater_thanOrLess_than),
        ("test_greater_thanOverEqualTo", test_greater_thanOverEqualTo),
        ("test_greater_thanWithDot", test_greater_thanWithDot),
        ("test_hermitianConjugateMatrix", test_hermitianConjugateMatrix),
        ("test_homothetic", test_homothetic),
        ("test_identicalTo", test_identicalTo),
        ("test_imageOf", test_imageOf),
        ("test_imageOfOrApproximatelyEqualTo", test_imageOfOrApproximatelyEqualTo),
        ("test_increment", test_increment),
        ("test_infinity", test_infinity),
        ("test_integral", test_integral),
        ("test_intercalate", test_intercalate),
        ("test_intersection", test_intersection),
        ("test_invertedLazyS", test_invertedLazyS),
        ("test_leftNormalFactorSemidirectProduct", test_leftNormalFactorSemidirectProduct),
        ("test_leftSemidirectProduct", test_leftSemidirectProduct),
        ("test_leftTack", test_leftTack),
        ("test_less_thanButNotEqualTo", test_less_thanButNotEqualTo),
        ("test_less_thanButNotEquivalentTo", test_less_thanButNotEquivalentTo),
        ("test_less_thanEqualToOrGreater_than", test_less_thanEqualToOrGreater_than),
        ("test_less_thanOrEqualTo", test_less_thanOrEqualTo),
        ("test_less_thanOrEquivalentTo", test_less_thanOrEquivalentTo),
        ("test_less_thanOrGreater_than", test_less_thanOrGreater_than),
        ("test_less_thanOverEqualTo", test_less_thanOverEqualTo),
        ("test_less_thanWithDot", test_less_thanWithDot),
        ("test_logicalAnd", test_logicalAnd),
        ("test_logicalOr", test_logicalOr),
        ("test_measuredAngle", test_measuredAngle),
        ("test_measuredBy", test_measuredBy),
        ("test_midlineHorizontalEllipsis", test_midlineHorizontalEllipsis),
        ("test_minus_or_plusSign", test_minus_or_plusSign),
        ("test_minusSign", test_minusSign),
        ("test_minusTilde", test_minusTilde),
        ("test_models", test_models),
        ("test_muchGreater_than", test_muchGreater_than),
        ("test_muchLess_than", test_muchLess_than),
        ("test_multimap", test_multimap),
        ("test_multiset", test_multiset),
        ("test_multisetMultiplication", test_multisetMultiplication),
        ("test_multisetUnion", test_multisetUnion),
        ("test_n_aryCoproduct", test_n_aryCoproduct),
        ("test_n_aryIntersection", test_n_aryIntersection),
        ("test_n_aryLogicalAnd", test_n_aryLogicalAnd),
        ("test_n_aryLogicalOr", test_n_aryLogicalOr),
        ("test_n_aryProduct", test_n_aryProduct),
        ("test_n_arySummation", test_n_arySummation),
        ("test_n_aryUnion", test_n_aryUnion),
        ("test_nabla", test_nabla),
        ("test_nand", test_nand),
        ("test_negatedDoubleVerticalBarDoubleRightTurnstile", test_negatedDoubleVerticalBarDoubleRightTurnstile),
        ("test_neitherApproximatelyNorActuallyEqualTo", test_neitherApproximatelyNorActuallyEqualTo),
        ("test_neitherASubsetOfNorEqualTo", test_neitherASubsetOfNorEqualTo),
        ("test_neitherASupersetOfNorEqualTo", test_neitherASupersetOfNorEqualTo),
        ("test_neitherGreater_thanNorEqualTo", test_neitherGreater_thanNorEqualTo),
        ("test_neitherGreater_thanNorEquivalentTo", test_neitherGreater_thanNorEquivalentTo),
        ("test_neitherGreater_thanNorLess_than", test_neitherGreater_thanNorLess_than),
        ("test_neitherLess_thanNorEqualTo", test_neitherLess_thanNorEqualTo),
        ("test_neitherLess_thanNorEquivalentTo", test_neitherLess_thanNorEquivalentTo),
        ("test_neitherLess_thanNorGreater_than", test_neitherLess_thanNorGreater_than),
        ("test_nor", test_nor),
        ("test_normalSubgroupOf", test_normalSubgroupOf),
        ("test_normalSubgroupOfOrEqualTo", test_normalSubgroupOfOrEqualTo),
        ("test_notAlmostEqualTo", test_notAlmostEqualTo),
        ("test_notAnElementOf", test_notAnElementOf),
        ("test_notASubsetOf", test_notASubsetOf),
        ("test_notASupersetOf", test_notASupersetOf),
        ("test_notAsymptoticallyEqualTo", test_notAsymptoticallyEqualTo),
        ("test_notEqualTo", test_notEqualTo),
        ("test_notEquivalentTo", test_notEquivalentTo),
        ("test_notGreater_than", test_notGreater_than),
        ("test_notIdenticalTo", test_notIdenticalTo),
        ("test_notLess_than", test_notLess_than),
        ("test_notNormalSubgroupOf", test_notNormalSubgroupOf),
        ("test_notNormalSubgroupOfOrEqualTo", test_notNormalSubgroupOfOrEqualTo),
        ("test_notParallelTo", test_notParallelTo),
        ("test_notSquareImageOfOrEqualTo", test_notSquareImageOfOrEqualTo),
        ("test_notSquareOriginalOfOrEqualTo", test_notSquareOriginalOfOrEqualTo),
        ("test_notTilde", test_notTilde),
        ("test_notTrue", test_notTrue),
        ("test_originalOf", test_originalOf),
        ("test_parallelTo", test_parallelTo),
        ("test_partialDifferential", test_partialDifferential),
        ("test_pitchfork", test_pitchfork),
        ("test_precedes", test_precedes),
        ("test_precedesButNotEquivalentTo", test_precedesButNotEquivalentTo),
        ("test_precedesOrEqualTo", test_precedesOrEqualTo),
        ("test_precedesOrEquivalentTo", test_precedesOrEquivalentTo),
        ("test_precedesUnderRelation", test_precedesUnderRelation),
        ("test_proportion", test_proportion),
        ("test_proportionalTo", test_proportionalTo),
        ("test_questionedEqualTo", test_questionedEqualTo),
        ("test_ratio", test_ratio),
        ("test_reversedTilde", test_reversedTilde),
        ("test_reversedTildeEquals", test_reversedTildeEquals),
        ("test_rightAngle", test_rightAngle),
        ("test_rightAngleWithArc", test_rightAngleWithArc),
        ("test_rightNormalFactorSemidirectProduct", test_rightNormalFactorSemidirectProduct),
        ("test_rightSemidirectProduct", test_rightSemidirectProduct),
        ("test_rightTack", test_rightTack),
        ("test_rightTriangle", test_rightTriangle),
        ("test_ringEqualTo", test_ringEqualTo),
        ("test_ringInEqualTo", test_ringInEqualTo),
        ("test_ringOperator", test_ringOperator),
        ("test_setMinus", test_setMinus),
        ("test_sineWave", test_sineWave),
        ("test_smallContainsAsMember", test_smallContainsAsMember),
        ("test_smallContainsWithOverbar", test_smallContainsWithOverbar),
        ("test_smallContainsWithVerticalBarAtEndOfHorizontalStroke", test_smallContainsWithVerticalBarAtEndOfHorizontalStroke),
        ("test_smallElementOf", test_smallElementOf),
        ("test_smallElementOfWithOverbar", test_smallElementOfWithOverbar),
        ("test_smallElementOfWithVerticalBarAtEndOfHorizontalStroke", test_smallElementOfWithVerticalBarAtEndOfHorizontalStroke),
        ("test_sphericalAngle", test_sphericalAngle),
        ("test_squareCap", test_squareCap),
        ("test_squareCup", test_squareCup),
        ("test_squaredDotOperator", test_squaredDotOperator),
        ("test_squaredMinus", test_squaredMinus),
        ("test_squaredPlus", test_squaredPlus),
        ("test_squaredTimes", test_squaredTimes),
        ("test_squareImageOf", test_squareImageOf),
        ("test_squareImageOfOrEqualTo", test_squareImageOfOrEqualTo),
        ("test_squareImageOfOrNotEqualTo", test_squareImageOfOrNotEqualTo),
        ("test_squareOriginalOf", test_squareOriginalOf),
        ("test_squareOriginalOfOrEqualTo", test_squareOriginalOfOrEqualTo),
        ("test_squareOriginalOfOrNotEqualTo", test_squareOriginalOfOrNotEqualTo),
        ("test_squareRoot", test_squareRoot),
        ("test_starEquals", test_starEquals),
        ("test_starOperator", test_starOperator),
        ("test_strictlyEquivalentTo", test_strictlyEquivalentTo),
        ("test_subsetOf", test_subsetOf),
        ("test_subsetOfOrEqualTo", test_subsetOfOrEqualTo),
        ("test_subsetOfWithNotEqualTo", test_subsetOfWithNotEqualTo),
        ("test_succeeds", test_succeeds),
        ("test_succeedsButNotEquivalentTo", test_succeedsButNotEquivalentTo),
        ("test_succeedsOrEqualTo", test_succeedsOrEqualTo),
        ("test_succeedsOrEquivalentTo", test_succeedsOrEquivalentTo),
        ("test_succeedsUnderRelation", test_succeedsUnderRelation),
        ("test_supersetOf", test_supersetOf),
        ("test_supersetOfOrEqualTo", test_supersetOfOrEqualTo),
        ("test_supersetOfWithNotEqualTo", test_supersetOfWithNotEqualTo),
        ("test_surfaceIntegral", test_surfaceIntegral),
        ("test_thereDoesNotExist", test_thereDoesNotExist),
        ("test_thereExists", test_thereExists),
        ("test_therefore", test_therefore),
        ("test_tildeOperator", test_tildeOperator),
        ("test_tripleIntegral", test_tripleIntegral),
        ("test_tripleTilde", test_tripleTilde),
        ("test_tripleVerticalBarRightTurnstile", test_tripleVerticalBarRightTurnstile),
        ("test_true", test_true),
        ("test_union", test_union),
        ("test_upRightDiagonalEllipsis", test_upRightDiagonalEllipsis),
        ("test_upTack", test_upTack),
        ("test_verticalEllipsis", test_verticalEllipsis),
        ("test_veryMuchGreater_than", test_veryMuchGreater_than),
        ("test_veryMuchLess_than", test_veryMuchLess_than),
        ("test_volumeIntegral", test_volumeIntegral),
        ("test_wreathProduct", test_wreathProduct),
        ("test_xor", test_xor),
        ("test_zNotationBagMembership", test_zNotationBagMembership),
    ]
}

extension UnicodeDataPlayingCardsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataPlayingCardsTests = [
        ("test_playingCardAceOfClubs", test_playingCardAceOfClubs),
        ("test_playingCardAceOfDiamonds", test_playingCardAceOfDiamonds),
        ("test_playingCardAceOfHearts", test_playingCardAceOfHearts),
        ("test_playingCardAceOfSpades", test_playingCardAceOfSpades),
        ("test_playingCardBack", test_playingCardBack),
        ("test_playingCardBlackJoker", test_playingCardBlackJoker),
        ("test_playingCardEightOfClubs", test_playingCardEightOfClubs),
        ("test_playingCardEightOfDiamonds", test_playingCardEightOfDiamonds),
        ("test_playingCardEightOfHearts", test_playingCardEightOfHearts),
        ("test_playingCardEightOfSpades", test_playingCardEightOfSpades),
        ("test_playingCardFiveOfClubs", test_playingCardFiveOfClubs),
        ("test_playingCardFiveOfDiamonds", test_playingCardFiveOfDiamonds),
        ("test_playingCardFiveOfHearts", test_playingCardFiveOfHearts),
        ("test_playingCardFiveOfSpades", test_playingCardFiveOfSpades),
        ("test_playingCardFool", test_playingCardFool),
        ("test_playingCardFourOfClubs", test_playingCardFourOfClubs),
        ("test_playingCardFourOfDiamonds", test_playingCardFourOfDiamonds),
        ("test_playingCardFourOfHearts", test_playingCardFourOfHearts),
        ("test_playingCardFourOfSpades", test_playingCardFourOfSpades),
        ("test_playingCardJackOfClubs", test_playingCardJackOfClubs),
        ("test_playingCardJackOfDiamonds", test_playingCardJackOfDiamonds),
        ("test_playingCardJackOfHearts", test_playingCardJackOfHearts),
        ("test_playingCardJackOfSpades", test_playingCardJackOfSpades),
        ("test_playingCardKingOfClubs", test_playingCardKingOfClubs),
        ("test_playingCardKingOfDiamonds", test_playingCardKingOfDiamonds),
        ("test_playingCardKingOfHearts", test_playingCardKingOfHearts),
        ("test_playingCardKingOfSpades", test_playingCardKingOfSpades),
        ("test_playingCardKnightOfClubs", test_playingCardKnightOfClubs),
        ("test_playingCardKnightOfDiamonds", test_playingCardKnightOfDiamonds),
        ("test_playingCardKnightOfHearts", test_playingCardKnightOfHearts),
        ("test_playingCardKnightOfSpades", test_playingCardKnightOfSpades),
        ("test_playingCardNineOfClubs", test_playingCardNineOfClubs),
        ("test_playingCardNineOfDiamonds", test_playingCardNineOfDiamonds),
        ("test_playingCardNineOfHearts", test_playingCardNineOfHearts),
        ("test_playingCardNineOfSpades", test_playingCardNineOfSpades),
        ("test_playingCardQueenOfClubs", test_playingCardQueenOfClubs),
        ("test_playingCardQueenOfDiamonds", test_playingCardQueenOfDiamonds),
        ("test_playingCardQueenOfHearts", test_playingCardQueenOfHearts),
        ("test_playingCardQueenOfSpades", test_playingCardQueenOfSpades),
        ("test_playingCardRedJoker", test_playingCardRedJoker),
        ("test_playingCardSevenOfClubs", test_playingCardSevenOfClubs),
        ("test_playingCardSevenOfDiamonds", test_playingCardSevenOfDiamonds),
        ("test_playingCardSevenOfHearts", test_playingCardSevenOfHearts),
        ("test_playingCardSevenOfSpades", test_playingCardSevenOfSpades),
        ("test_playingCardSixOfClubs", test_playingCardSixOfClubs),
        ("test_playingCardSixOfDiamonds", test_playingCardSixOfDiamonds),
        ("test_playingCardSixOfHearts", test_playingCardSixOfHearts),
        ("test_playingCardSixOfSpades", test_playingCardSixOfSpades),
        ("test_playingCardTenOfClubs", test_playingCardTenOfClubs),
        ("test_playingCardTenOfDiamonds", test_playingCardTenOfDiamonds),
        ("test_playingCardTenOfHearts", test_playingCardTenOfHearts),
        ("test_playingCardTenOfSpades", test_playingCardTenOfSpades),
        ("test_playingCardThreeOfClubs", test_playingCardThreeOfClubs),
        ("test_playingCardThreeOfDiamonds", test_playingCardThreeOfDiamonds),
        ("test_playingCardThreeOfHearts", test_playingCardThreeOfHearts),
        ("test_playingCardThreeOfSpades", test_playingCardThreeOfSpades),
        ("test_playingCardTrump_1", test_playingCardTrump_1),
        ("test_playingCardTrump_10", test_playingCardTrump_10),
        ("test_playingCardTrump_11", test_playingCardTrump_11),
        ("test_playingCardTrump_12", test_playingCardTrump_12),
        ("test_playingCardTrump_13", test_playingCardTrump_13),
        ("test_playingCardTrump_14", test_playingCardTrump_14),
        ("test_playingCardTrump_15", test_playingCardTrump_15),
        ("test_playingCardTrump_16", test_playingCardTrump_16),
        ("test_playingCardTrump_17", test_playingCardTrump_17),
        ("test_playingCardTrump_18", test_playingCardTrump_18),
        ("test_playingCardTrump_19", test_playingCardTrump_19),
        ("test_playingCardTrump_2", test_playingCardTrump_2),
        ("test_playingCardTrump_20", test_playingCardTrump_20),
        ("test_playingCardTrump_21", test_playingCardTrump_21),
        ("test_playingCardTrump_3", test_playingCardTrump_3),
        ("test_playingCardTrump_4", test_playingCardTrump_4),
        ("test_playingCardTrump_5", test_playingCardTrump_5),
        ("test_playingCardTrump_6", test_playingCardTrump_6),
        ("test_playingCardTrump_7", test_playingCardTrump_7),
        ("test_playingCardTrump_8", test_playingCardTrump_8),
        ("test_playingCardTrump_9", test_playingCardTrump_9),
        ("test_playingCardTwoOfClubs", test_playingCardTwoOfClubs),
        ("test_playingCardTwoOfDiamonds", test_playingCardTwoOfDiamonds),
        ("test_playingCardTwoOfHearts", test_playingCardTwoOfHearts),
        ("test_playingCardTwoOfSpades", test_playingCardTwoOfSpades),
        ("test_playingCardWhiteJoker", test_playingCardWhiteJoker),
    ]
}

extension UnicodeDataTransportAndMapSymbolsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnicodeDataTransportAndMapSymbolsTests = [
        ("test_aerialTramway", test_aerialTramway),
        ("test_airplaneArriving", test_airplaneArriving),
        ("test_airplaneDeparture", test_airplaneDeparture),
        ("test_ambulance", test_ambulance),
        ("test_articulatedLorry", test_articulatedLorry),
        ("test_automobile", test_automobile),
        ("test_babySymbol", test_babySymbol),
        ("test_baggageClaim", test_baggageClaim),
        ("test_bath", test_bath),
        ("test_bathtub", test_bathtub),
        ("test_bed", test_bed),
        ("test_bellhopBell", test_bellhopBell),
        ("test_bicycle", test_bicycle),
        ("test_bicyclist", test_bicyclist),
        ("test_boysSymbol", test_boysSymbol),
        ("test_bus", test_bus),
        ("test_busStop", test_busStop),
        ("test_canoe", test_canoe),
        ("test_childrenCrossing", test_childrenCrossing),
        ("test_circledInformationSource", test_circledInformationSource),
        ("test_constructionSign", test_constructionSign),
        ("test_couchAndLamp", test_couchAndLamp),
        ("test_customs", test_customs),
        ("test_deliveryTruck", test_deliveryTruck),
        ("test_dieselLocomotive", test_dieselLocomotive),
        ("test_doNotLitterSymbol", test_doNotLitterSymbol),
        ("test_door", test_door),
        ("test_fireEngine", test_fireEngine),
        ("test_flyingSaucer", test_flyingSaucer),
        ("test_girlsSymbol", test_girlsSymbol),
        ("test_hammerAndWrench", test_hammerAndWrench),
        ("test_helicopter", test_helicopter),
        ("test_high_speedTrain", test_high_speedTrain),
        ("test_high_speedTrainWithBulletNose", test_high_speedTrainWithBulletNose),
        ("test_horizontalTrafficLight", test_horizontalTrafficLight),
        ("test_leftLuggage", test_leftLuggage),
        ("test_lightRail", test_lightRail),
        ("test_mensSymbol", test_mensSymbol),
        ("test_metro", test_metro),
        ("test_minibus", test_minibus),
        ("test_monorail", test_monorail),
        ("test_motorBoat", test_motorBoat),
        ("test_motorScooter", test_motorScooter),
        ("test_motorway", test_motorway),
        ("test_mountainBicyclist", test_mountainBicyclist),
        ("test_mountainCableway", test_mountainCableway),
        ("test_mountainRailway", test_mountainRailway),
        ("test_noBicycles", test_noBicycles),
        ("test_noEntrySign", test_noEntrySign),
        ("test_non_potableWaterSymbol", test_non_potableWaterSymbol),
        ("test_noPedestrians", test_noPedestrians),
        ("test_northeast_pointingAirplane", test_northeast_pointingAirplane),
        ("test_noSmokingSymbol", test_noSmokingSymbol),
        ("test_octagonalSign", test_octagonalSign),
        ("test_oilDrum", test_oilDrum),
        ("test_oncomingAutomobile", test_oncomingAutomobile),
        ("test_oncomingBus", test_oncomingBus),
        ("test_oncomingFireEngine", test_oncomingFireEngine),
        ("test_oncomingPoliceCar", test_oncomingPoliceCar),
        ("test_oncomingTaxi", test_oncomingTaxi),
        ("test_pagoda", test_pagoda),
        ("test_passengerShip", test_passengerShip),
        ("test_passportControl", test_passportControl),
        ("test_pedestrian", test_pedestrian),
        ("test_placeOfWorship", test_placeOfWorship),
        ("test_policeCar", test_policeCar),
        ("test_policeCarsRevolvingLight", test_policeCarsRevolvingLight),
        ("test_potableWaterSymbol", test_potableWaterSymbol),
        ("test_prohibitedSign", test_prohibitedSign),
        ("test_putLitterInItsPlaceSymbol", test_putLitterInItsPlaceSymbol),
        ("test_railwayCar", test_railwayCar),
        ("test_railwayTrack", test_railwayTrack),
        ("test_recreationalVehicle", test_recreationalVehicle),
        ("test_restroom", test_restroom),
        ("test_rocket", test_rocket),
        ("test_rowboat", test_rowboat),
        ("test_satellite", test_satellite),
        ("test_scooter", test_scooter),
        ("test_shield", test_shield),
        ("test_ship", test_ship),
        ("test_shoppingBags", test_shoppingBags),
        ("test_shoppingTrolley", test_shoppingTrolley),
        ("test_shower", test_shower),
        ("test_skateboard", test_skateboard),
        ("test_sled", test_sled),
        ("test_sleepingAccommodation", test_sleepingAccommodation),
        ("test_smallAirplane", test_smallAirplane),
        ("test_smokingSymbol", test_smokingSymbol),
        ("test_speedboat", test_speedboat),
        ("test_station", test_station),
        ("test_steamLocomotive", test_steamLocomotive),
        ("test_stupa", test_stupa),
        ("test_suspensionRailway", test_suspensionRailway),
        ("test_taxi", test_taxi),
        ("test_toilet", test_toilet),
        ("test_tractor", test_tractor),
        ("test_train", test_train),
        ("test_tram", test_tram),
        ("test_tramCar", test_tramCar),
        ("test_triangleWithRoundedCorners", test_triangleWithRoundedCorners),
        ("test_triangularFlagOnPost", test_triangularFlagOnPost),
        ("test_trolleybus", test_trolleybus),
        ("test_up_pointingAirplane", test_up_pointingAirplane),
        ("test_up_pointingMilitaryAirplane", test_up_pointingMilitaryAirplane),
        ("test_up_pointingSmallAirplane", test_up_pointingSmallAirplane),
        ("test_verticalTrafficLight", test_verticalTrafficLight),
        ("test_waterCloset", test_waterCloset),
        ("test_womensSymbol", test_womensSymbol),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ASCIIDataTests.__allTests__ASCIIDataTests),
        testCase(UnicodeDataASCIITests.__allTests__UnicodeDataASCIITests),
        testCase(UnicodeDataArabicTests.__allTests__UnicodeDataArabicTests),
        testCase(UnicodeDataBasicLatinTests.__allTests__UnicodeDataBasicLatinTests),
        testCase(UnicodeDataBraillePatternsTests.__allTests__UnicodeDataBraillePatternsTests),
        testCase(UnicodeDataChessSymbolsTests.__allTests__UnicodeDataChessSymbolsTests),
        testCase(UnicodeDataCombiningDiacriticalMarksTests.__allTests__UnicodeDataCombiningDiacriticalMarksTests),
        testCase(UnicodeDataDoesNotCrashTests.__allTests__UnicodeDataDoesNotCrashTests),
        testCase(UnicodeDataEmoticonsTests.__allTests__UnicodeDataEmoticonsTests),
        testCase(UnicodeDataHangulJamoTests.__allTests__UnicodeDataHangulJamoTests),
        testCase(UnicodeDataHiraganaTests.__allTests__UnicodeDataHiraganaTests),
        testCase(UnicodeDataKatakanaTests.__allTests__UnicodeDataKatakanaTests),
        testCase(UnicodeDataLatin1SupplementTests.__allTests__UnicodeDataLatin1SupplementTests),
        testCase(UnicodeDataLatinExtendedATests.__allTests__UnicodeDataLatinExtendedATests),
        testCase(UnicodeDataMathematicalOperatorsTests.__allTests__UnicodeDataMathematicalOperatorsTests),
        testCase(UnicodeDataPlayingCardsTests.__allTests__UnicodeDataPlayingCardsTests),
        testCase(UnicodeDataTransportAndMapSymbolsTests.__allTests__UnicodeDataTransportAndMapSymbolsTests),
    ]
}
#endif
