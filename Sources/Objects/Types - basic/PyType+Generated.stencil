// swiftlint:disable:previous vertical_whitespace
// swiftlint:disable vertical_whitespace
// swiftlint:disable line_length
// swiftlint:disable file_length

extension PyType {
{% for type in types.classes|annotated:"pytype" %}

  internal static func {{ type.annotations.pytype }}(_ context: PyContext, type: PyType, base: PyType?) -> PyType {
    {# All types (except for PyInt) have to be marked final, stencil has problem with: 'not (type.isFinal or type.name == "PyInt")'#}
    {% if not type.isFinal and type.name != "PyInt" %}
    #warning("Type {{ type.name }} should be marked final.")
    {% endif %}
    let result = PyType(context, name: "{{ type.annotations.pytype }}", type: type, base: base)

    {% for variable in type.staticVariables where variable.name == "doc" %}
    // result.__doc__ = {{ type.name }}.{{ variable.name }}
    {% endfor %}

    {% for prop in type.variables|annotated:"pyproperty" %}
    // result.{{ prop.annotations.pyproperty }} = {{ type.name }}.{{ prop.name }}
    {% endfor %}

    {% for method in type.methods|annotated:"pymethod" %}
    // result.{{ method.annotations.pymethod }} = {{ type.name }}.{{ method.name }}
    {% endfor %}

    return result
  }
{% endfor %}
}
