{# TODO: Errors, warnings #}

{% macro printProtocols type %}
  {% for prop in type.methods|annotated:"pyproperty" %}
protocol {{ prop.annotations.pyproperty }}Owner { func {{ prop.name }} -> {{ prop.returnTypeName }} }
  {% endfor %}

  {% for method in type.methods|annotated:"pymethod" %}
    {# String has 'index' and 'count' with different signatures, we will call them 'Ranged' #}
    {% if method.name|contains: "start: PyObject?" %}
protocol {{ method.annotations.pymethod }}RangedOwner { func {{ method.name }} -> {{ method.returnTypeName }} }
    {% else %}
protocol {{ method.annotations.pymethod }}Owner { func {{ method.name }} -> {{ method.returnTypeName }} }
    {% endif %}
  {% endfor %}
{% endmacro %}

{% for type in types.classes|annotated:"pytype" %}
{% call printProtocols type %}
{% endfor %}

{% for type in types.classes|annotated:"pyerrortype" %}
{% call printProtocols type %}
{% endfor %}

{% for type in types.classes|annotated:"pywarningtype" %}
{% call printProtocols type %}
{% endfor %}
